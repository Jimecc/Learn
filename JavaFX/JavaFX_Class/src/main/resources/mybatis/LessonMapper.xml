<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jim.sprjfx.mapper.LessonMapper">

    <resultMap id="BaseMap" type="com.jim.sprjfx.entity.Lesson">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="num" property="num"/>
        <result column="rem" property="rem"/>
        <result column="tecid" property="tecid"/>
    </resultMap>

    <insert id="insertLesson" parameterType="com.jim.sprjfx.entity.Lesson" >
        insert into cclass.les(name,num,rem,tecid) values (#{name},#{num},#{rem},#{tecid})
    </insert>
    <delete id="deleteByIdInt" parameterType="Integer">
        DELETE FROM cclass.les where id=#{id}
    </delete>

    <select id="getLessonByID" parameterType="Integer" resultType="com.jim.sprjfx.entity.Lesson">
        select * from cclass.les where #{id}=id;
    </select>

    <select id="getLessonsByTecID" parameterType="Integer" resultMap="BaseMap">
        select * from cclass.les where #{tecid}=tecid;
    </select>
    <select id="getAllLessons" resultMap="BaseMap">
        SELECT * FROM cclass.les;
    </select>
    <select id="getLessonsByName" parameterType="String" resultMap="BaseMap">
        SELECT * FROM cclass.les where name like CONCAT('%',#{name},'%');
    </select>
    <select id="getLessonByTecID" parameterType="Integer" resultType="com.jim.sprjfx.entity.Lesson">
        select * from cclass.les where #{tecid}=tecid;
    </select>
    <select id="getLessonByNameAndTecID" parameterType="com.jim.sprjfx.entity.Lesson" resultType="com.jim.sprjfx.entity.Lesson">
        select * from cclass.les where #{tecid}=tecid and #{name}=name;
    </select>



    <update id="updateLesson" parameterType="com.jim.sprjfx.entity.Lesson">
        update cclass.les
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null">
                name = #{name},
            </if>
            <if test="num != 0">
                num = #{num},
            </if>
            <if test="rem != 0">
                rem = #{rem},
            </if>
        </trim>
        where #{id}=id;
    </update>


</mapper>