[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:36,646 [32mINFO[m [main][AbstractTestContextBootstrapper.java:308] ‚Äê Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.jim.shanjupay.merchant.RestTemplateTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:36,663 [32mINFO[m [main][AbstractContextLoader.java:264] ‚Äê Could not detect default resource locations for test class [com.jim.shanjupay.merchant.RestTemplateTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:36,664 [32mINFO[m [main][AnnotationConfigContextLoaderUtils.java:83] ‚Äê Could not detect default configuration classes for test class [com.jim.shanjupay.merchant.RestTemplateTest]: RestTemplateTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:36,878 [32mINFO[m [main][SpringBootTestContextBootstrapper.java:247] ‚Äê Found @SpringBootConfiguration com.jim.shanjupay.merchant.MerchantApplicationBootstrap for test class com.jim.shanjupay.merchant.RestTemplateTest
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:37,024 [32mINFO[m [main][AbstractTestContextBootstrapper.java:248] ‚Äê Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:37,041 [32mINFO[m [main][AbstractTestContextBootstrapper.java:177] ‚Äê Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@78452606, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@147e2ae7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@448c8166, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4470fbd6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@15d49048, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7098b907, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@503f91c3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@13526e59, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2235eaab, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@17503f6b]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:37,762 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:37,774 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:37,786 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:38,964 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$edc4e996] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:39,202 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:39,338 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:39,628 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:39,658 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-application.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:39,663 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1837533591 {name='merchant-application.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/merchant, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}, NacosPropertySource@741883443 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:39,760 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,508 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,520 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,538 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,539 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,539 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,540 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,541 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,541 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,541 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,542 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,542 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,543 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,544 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,546 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,546 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,546 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,546 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,546 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,546 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,547 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,547 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,547 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,547 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,550 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:41,913 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:42,052 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:42,053 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:42,095 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:42,106 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:42,107 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:42,499 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=14034f51-6647-381b-a3a1-d8871189cef1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:42,870 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$556c359d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:42,906 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:42,953 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:42,975 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,010 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,029 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,037 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$c7abd217] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,094 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$5a55da6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,145 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,169 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,185 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$1a9b1429] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,199 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e661cee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,227 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$9958b01d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,244 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,248 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,267 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,276 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,341 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,357 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e6c9acf7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,382 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,390 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,402 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,409 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,637 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,658 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,729 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,800 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,810 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$1eec78cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,863 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,893 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$58c274cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,901 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$2d3e662a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,910 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$df8b2843] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,918 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$9aa20e32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,927 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,939 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,958 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$c16d8560] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:43,995 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,007 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$f4a03b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,051 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,066 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,145 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,175 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,192 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$ebdeb22d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,211 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,225 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,237 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,246 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,247 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,296 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,373 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,391 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,393 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,414 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$edc4e996] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,730 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,933 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:44,987 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,117 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,198 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,204 [32mINFO[m [main][AnnotatedInterfaceConfigBeanBuilder.java:84] ‚Äê The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,246 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,286 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,288 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,307 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,320 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,320 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,323 [36mDEBUG[m [main][SpringExtensionFactory.java:99] ‚Äê  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,332 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,381 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,412 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,416 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,444 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,450 [32mINFO[m [main][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,451 [32mINFO[m [main][AbstractSpringCloudRegistry.java:223] ‚Äê The metadata of Dubbo service[key : com.shanjupay.merchant.api.MerchantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,453 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,688 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,702 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,705 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,711 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,712 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,714 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,760 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,795 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,803 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,829 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,833 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,850 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,853 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,854 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,855 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,856 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,857 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,858 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,860 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,861 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,862 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,862 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,862 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,863 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,864 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,864 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,866 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,866 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,872 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,886 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,902 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,958 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,960 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,966 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,966 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,967 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,967 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,967 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,967 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,968 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,968 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,968 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,968 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,969 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,969 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,974 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:45,975 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,008 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 4902 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,011 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,012 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,013 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,014 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,020 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,041 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,041 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,041 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,116 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,118 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x92d5e938, L:/127.0.0.1:64709 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,119 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,119 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,120 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,120 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,133 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,134 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,139 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@434109f7
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,200 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,238 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,258 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,346 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {com.shanjupay.merchant.api.MerchantService=dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,352 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,391 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,439 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,454 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,461 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D4902%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678068345694%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,599 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,604 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,617 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,621 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,623 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,630 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,637 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,639 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:46,641 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service com.shanjupay.merchant.api.MerchantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.merchant.api.MerchantService%26lazy%3Dfalse%26methods%3DqueryMerchantByID%26pid%3D4902%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678068345246&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:48,659 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:48,909 [32mINFO[m [main][PropertySourcedRequestMappingHandlerMapping.java:69] ‚Äê Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,092 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,101 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,109 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,109 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,203 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,207 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,226 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,228 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,228 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,229 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,237 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,240 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,244 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,247 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,248 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,315 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,321 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,322 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,322 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,323 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:50,617 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:51,566 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:51,727 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,078 [36mDEBUG[m [main][DubboServiceMetadataRepository.java:273] ‚Äê The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,081 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,118 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:160] ‚Äê Context refreshed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,139 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,159 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,178 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,186 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:163] ‚Äê Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,216 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,221 [36mDEBUG[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,262 [32mINFO[m [main][ApiListingReferenceScanner.java:41] ‚Äê Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,593 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,602 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,608 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_3
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,618 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,623 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_5
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,628 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingPOST_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:53,689 [32mINFO[m [main][StartupInfoLogger.java:59] ‚Äê Started RestTemplateTest in 16.532 seconds (JVM running for 18.589)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,387 [32mINFO[m [main][RestTemplateTest.java:49] ‚Äê ËØ∑Ê±ÇÈ™åËØÅÁ†ÅÊúçÂä°ÂæóÂà∞Áõ∏Â∫î{}<200,{code=0, msg=, result={key=sms:855638e11adf4897802333842dc7c7d8, content=null}},[Content-Type:"application/json;charset=UTF-8", Date:"Mon, 06 Mar 2023 02:05:54 GMT", Transfer-Encoding:"chunked"]>
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,402 [32mINFO[m [Thread-9][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,403 [32mINFO[m [Thread-9][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678068345701], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,405 [32mINFO[m [Thread-9][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678068345701, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,407 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,415 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,417 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,424 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,426 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,429 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345246, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,429 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,431 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4902&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068345694&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,434 [32mINFO[m [Thread-9][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:64709-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,437 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4902&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,438 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=4902&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,439 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=4902&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,442 [32mINFO[m [Thread-9][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0x92d5e938, L:/127.0.0.1:64709 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,446 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4902&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,447 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4902&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,452 [32mINFO[m [Thread-9][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,466 [32mINFO[m [Thread-9][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,491 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,492 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" group="merchant-service" lazy="false" sticky="false" generic="true" version="1.0.0" generic="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,575 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:293] ‚Äê org.apache.dubbo.common.bytecode.proxy1@2c91271a was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:05:54,576 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:32,591 [32mINFO[m [main][AbstractTestContextBootstrapper.java:308] ‚Äê Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.jim.shanjupay.merchant.RestTemplateTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:32,601 [32mINFO[m [main][AbstractContextLoader.java:264] ‚Äê Could not detect default resource locations for test class [com.jim.shanjupay.merchant.RestTemplateTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:32,603 [32mINFO[m [main][AnnotationConfigContextLoaderUtils.java:83] ‚Äê Could not detect default configuration classes for test class [com.jim.shanjupay.merchant.RestTemplateTest]: RestTemplateTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:32,802 [32mINFO[m [main][SpringBootTestContextBootstrapper.java:247] ‚Äê Found @SpringBootConfiguration com.jim.shanjupay.merchant.MerchantApplicationBootstrap for test class com.jim.shanjupay.merchant.RestTemplateTest
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:32,922 [32mINFO[m [main][AbstractTestContextBootstrapper.java:248] ‚Äê Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:32,935 [32mINFO[m [main][AbstractTestContextBootstrapper.java:177] ‚Äê Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@21be3395, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4f49f6af, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@78452606, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@147e2ae7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@448c8166, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4470fbd6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@15d49048, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7098b907, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@503f91c3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@13526e59]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:33,504 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:33,519 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:33,540 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:34,665 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40619f1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:34,944 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:35,156 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:35,566 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:35,614 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-application.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:35,618 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@209360767 {name='merchant-application.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/merchant, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}, NacosPropertySource@1439361845 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:35,747 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,833 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,841 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,857 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,858 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,858 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,859 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,860 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,860 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,860 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,860 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,860 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,861 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,865 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,866 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,867 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,867 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,867 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,867 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,868 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,868 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,868 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,868 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,868 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:37,868 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:38,237 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:38,371 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:38,372 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:38,406 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:38,413 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:38,413 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:38,822 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=14034f51-6647-381b-a3a1-d8871189cef1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,203 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$a808eb22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,245 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,291 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,314 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,332 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,342 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,345 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$1a48879c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,356 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$acf28ff4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,367 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,372 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,384 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$6d37c9ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,391 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$6102d273] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,418 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$ebf565a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,438 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,443 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,468 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,477 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,542 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,549 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$3966627c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,568 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,572 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,589 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,599 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,726 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,729 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,752 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,783 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,789 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$71892e52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,812 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,820 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$ab5f2a52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,825 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$7fdb1baf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,831 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$3227ddc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,837 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ed3ec3b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,844 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,853 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,862 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$140a3ae5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,884 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,890 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$61e6b93e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,913 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,921 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:39,986 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,021 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,039 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$3e7b67b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,062 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,073 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,082 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,089 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,090 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,151 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,169 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,173 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,174 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,186 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40619f1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,411 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,593 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,617 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,738 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,810 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,816 [32mINFO[m [main][AnnotatedInterfaceConfigBeanBuilder.java:84] ‚Äê The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,851 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,898 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,900 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,914 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,928 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,929 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,931 [36mDEBUG[m [main][SpringExtensionFactory.java:99] ‚Äê  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,938 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:40,979 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,003 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,004 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,015 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,017 [32mINFO[m [main][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,018 [32mINFO[m [main][AbstractSpringCloudRegistry.java:223] ‚Äê The metadata of Dubbo service[key : com.shanjupay.merchant.api.MerchantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,018 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,171 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,177 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,179 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,183 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,185 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,187 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,225 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,255 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,262 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,293 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,296 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,314 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,322 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,325 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,327 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,328 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,329 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,330 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,331 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,332 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,333 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,333 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,334 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,334 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,335 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,337 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,339 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,339 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,351 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,382 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,399 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,467 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,467 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,474 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,476 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,476 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,477 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,477 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,477 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,477 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,478 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,478 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,478 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,478 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,479 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,485 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,486 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,512 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 5094 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,515 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,515 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,516 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,517 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,520 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,542 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,543 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,543 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,605 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,608 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,609 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x17311520, L:/127.0.0.1:65052 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,609 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,610 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,610 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,619 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,620 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,625 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6906592a
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,688 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,730 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,751 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,831 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {com.shanjupay.merchant.api.MerchantService=dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,837 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,877 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,909 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,924 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:41,930 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D5094%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678068521173%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:42,108 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:42,122 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:42,145 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:42,159 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:42,166 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:42,176 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:42,184 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:42,186 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:42,187 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service com.shanjupay.merchant.api.MerchantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.merchant.api.MerchantService%26lazy%3Dfalse%26methods%3DqueryMerchantByID%26pid%3D5094%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678068520852&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:44,593 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:44,894 [32mINFO[m [main][PropertySourcedRequestMappingHandlerMapping.java:69] ‚Äê Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,495 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,505 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,512 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,512 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,567 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,569 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,578 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,579 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,579 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,580 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,587 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,587 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,589 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,590 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,590 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,601 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,603 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,604 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,604 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,604 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:46,759 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:47,900 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:47,934 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,060 [36mDEBUG[m [main][DubboServiceMetadataRepository.java:273] ‚Äê The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,071 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,143 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:160] ‚Äê Context refreshed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,171 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,190 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,192 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:163] ‚Äê Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,202 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,267 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,271 [36mDEBUG[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,281 [32mINFO[m [main][ApiListingReferenceScanner.java:41] ‚Äê Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,697 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,714 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,720 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_3
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,724 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,735 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_5
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,737 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingPOST_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:49,810 [32mINFO[m [main][StartupInfoLogger.java:59] ‚Äê Started RestTemplateTest in 16.806 seconds (JVM running for 18.721)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,307 [32mINFO[m [main][RestTemplateTest.java:50] ‚Äê ËØ∑Ê±ÇÈ™åËØÅÁ†ÅÊúçÂä°ÂæóÂà∞Áõ∏Â∫î{}{"body":{"code":0,"msg":"","result":{"key":"sms:3b66d88d57f64e5186034c886d546aed"}},"headers":{"Date":["Mon, 06 Mar 2023 02:08:50 GMT"],"Content-Type":["application/json;charset=UTF-8"],"Transfer-Encoding":["chunked"]},"statusCode":"OK","statusCodeValue":200}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,318 [32mINFO[m [Thread-9][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,319 [32mINFO[m [Thread-9][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678068521177], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,320 [32mINFO[m [Thread-9][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678068521177, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,320 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,327 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,327 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,333 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,336 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,339 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068521173&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,341 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,401 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068520852, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,403 [32mINFO[m [Thread-9][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:65052-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,406 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5094&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,407 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=5094&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,407 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5094&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,409 [32mINFO[m [Thread-9][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0x17311520, L:/127.0.0.1:65052 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,411 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5094&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,412 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5094&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,414 [32mINFO[m [Thread-9][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,418 [32mINFO[m [Thread-9][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,432 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,435 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" group="merchant-service" generic="true" generic="true" lazy="false" sticky="false" version="1.0.0" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,438 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:293] ‚Äê org.apache.dubbo.common.bytecode.proxy1@7db39282 was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:08:50,439 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:11,510 [32mINFO[m [main][AbstractTestContextBootstrapper.java:308] ‚Äê Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.jim.shanjupay.merchant.RestTemplateTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:11,523 [32mINFO[m [main][AbstractContextLoader.java:264] ‚Äê Could not detect default resource locations for test class [com.jim.shanjupay.merchant.RestTemplateTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:11,525 [32mINFO[m [main][AnnotationConfigContextLoaderUtils.java:83] ‚Äê Could not detect default configuration classes for test class [com.jim.shanjupay.merchant.RestTemplateTest]: RestTemplateTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:11,733 [32mINFO[m [main][SpringBootTestContextBootstrapper.java:247] ‚Äê Found @SpringBootConfiguration com.jim.shanjupay.merchant.MerchantApplicationBootstrap for test class com.jim.shanjupay.merchant.RestTemplateTest
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:11,859 [32mINFO[m [main][AbstractTestContextBootstrapper.java:248] ‚Äê Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:11,874 [32mINFO[m [main][AbstractTestContextBootstrapper.java:177] ‚Äê Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@21be3395, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4f49f6af, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@78452606, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@147e2ae7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@448c8166, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4470fbd6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@15d49048, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7098b907, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@503f91c3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@13526e59]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:12,656 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:12,663 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:12,675 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:13,782 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5deff870] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:13,950 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:14,090 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:14,305 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:14,336 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-application.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:14,341 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@10405169 {name='merchant-application.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/merchant, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}, NacosPropertySource@1075082007 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:14,456 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,428 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,433 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,465 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,466 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,467 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,467 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,467 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,467 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,468 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,468 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,469 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,470 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,472 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,474 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,475 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,476 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,476 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,476 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,476 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,477 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,477 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,477 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,477 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,477 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,821 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,946 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,947 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:16,992 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:17,000 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:17,001 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:17,483 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=14034f51-6647-381b-a3a1-d8871189cef1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,042 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$c5974477] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,105 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,158 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,190 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,215 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,225 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,227 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$37d6e0f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,244 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$ca80e949] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,257 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,265 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,280 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$8ac62303] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,294 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$7e912bc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,323 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$983bef7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,344 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,350 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,376 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,392 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,475 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,491 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$56f4bbd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,521 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,525 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,542 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,552 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,674 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,676 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,702 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,761 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,771 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$8f1787a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,808 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,818 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$c8ed83a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,824 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$9d697504] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,832 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$4fb6371d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,841 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$acd1d0c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,848 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,863 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,877 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$3198943a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,902 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,908 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$7f751293] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,936 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:18,952 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,075 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,106 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,126 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$5c09c107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,152 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,165 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,180 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,188 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,189 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,238 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,260 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,263 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,264 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,277 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5deff870] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,448 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,682 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,721 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,832 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,926 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,933 [32mINFO[m [main][AnnotatedInterfaceConfigBeanBuilder.java:84] ‚Äê The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:19,973 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,020 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,021 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,034 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,047 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,049 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,053 [36mDEBUG[m [main][SpringExtensionFactory.java:99] ‚Äê  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,062 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,100 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,118 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,119 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,126 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,128 [32mINFO[m [main][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,128 [32mINFO[m [main][AbstractSpringCloudRegistry.java:223] ‚Äê The metadata of Dubbo service[key : com.shanjupay.merchant.api.MerchantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,128 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,387 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,399 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,402 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,409 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,411 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,414 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,458 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,512 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,520 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,612 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,643 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,675 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,683 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,685 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,687 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,691 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,694 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,696 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,699 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,700 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,701 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,703 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,706 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,707 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,711 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,711 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,713 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,714 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,722 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,741 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,782 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,843 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,843 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,853 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,858 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,860 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,860 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,861 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,861 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,861 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,861 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,862 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,862 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,862 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,862 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,867 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,868 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,906 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 5118 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,911 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,911 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,913 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,914 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,919 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,944 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,945 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:20,945 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,009 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,013 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,014 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,014 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xa8c55ec8, L:/127.0.0.1:65127 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,014 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,015 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,024 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,025 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,027 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7acd9fa3
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,068 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,119 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,150 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,405 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {com.shanjupay.merchant.api.MerchantService=dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,418 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,455 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,480 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,495 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,501 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D5118%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678068560390%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,696 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,706 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,729 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,749 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,812 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,840 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,856 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,866 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:21,872 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service com.shanjupay.merchant.api.MerchantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dfalse%26interface%3Dcom.shanjupay.merchant.api.MerchantService%26lazy%3Dfalse%26methods%3DqueryMerchantByID%26pid%3D5118%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678068559973&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:24,421 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:24,669 [32mINFO[m [main][PropertySourcedRequestMappingHandlerMapping.java:69] ‚Äê Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:25,898 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:25,909 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:25,923 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:25,924 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,043 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,046 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,059 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,061 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,063 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,064 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,074 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,074 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,078 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,083 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,083 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,106 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,110 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,111 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,111 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,111 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,286 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,756 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:26,785 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,367 [36mDEBUG[m [main][DubboServiceMetadataRepository.java:273] ‚Äê The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,368 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,396 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:160] ‚Äê Context refreshed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,406 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,420 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,431 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,438 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:163] ‚Äê Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,479 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,483 [36mDEBUG[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,498 [32mINFO[m [main][ApiListingReferenceScanner.java:41] ‚Äê Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,849 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,862 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,868 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_3
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,872 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,875 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_5
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,878 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingPOST_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:27,931 [32mINFO[m [main][StartupInfoLogger.java:59] ‚Äê Started RestTemplateTest in 15.985 seconds (JVM running for 17.991)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,270 [32mINFO[m [main][RestTemplateTest.java:50] ‚Äê ËØ∑Ê±ÇÈ™åËØÅÁ†ÅÊúçÂä°ÂæóÂà∞Áõ∏Â∫î{}{"body":{"code":0,"msg":"","result":{"key":"sms:e5f17e4a7de04056bfaa9771cbb6ccc1"}},"headers":{"Content-Type":["application/json;charset=UTF-8"],"Date":["Mon, 06 Mar 2023 02:09:28 GMT"],"Transfer-Encoding":["chunked"]},"statusCode":"OK","statusCodeValue":200}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,278 [32mINFO[m [Thread-9][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,278 [32mINFO[m [Thread-9][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678068560399], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,279 [32mINFO[m [Thread-9][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678068560399, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,279 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,286 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,287 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,293 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,296 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,297 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068560390&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,297 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,297 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678068559973, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,298 [32mINFO[m [Thread-9][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:65127-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,300 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5118&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,301 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5118&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,302 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5118&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,303 [32mINFO[m [Thread-9][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0xa8c55ec8, L:/127.0.0.1:65127 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,305 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=5118&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,306 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5118&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,307 [32mINFO[m [Thread-9][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,312 [32mINFO[m [Thread-9][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,326 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,328 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" lazy="false" sticky="false" version="1.0.0" group="merchant-service" generic="true" generic="true" valid="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,331 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:293] ‚Äê org.apache.dubbo.common.bytecode.proxy1@67fef059 was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:09:28,332 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:43,459 [32mINFO[m [main][AbstractTestContextBootstrapper.java:308] ‚Äê Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.jim.shanjupay.merchant.RestTemplateTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:43,473 [32mINFO[m [main][AbstractContextLoader.java:264] ‚Äê Could not detect default resource locations for test class [com.jim.shanjupay.merchant.RestTemplateTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:43,474 [32mINFO[m [main][AnnotationConfigContextLoaderUtils.java:83] ‚Äê Could not detect default configuration classes for test class [com.jim.shanjupay.merchant.RestTemplateTest]: RestTemplateTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:43,690 [32mINFO[m [main][SpringBootTestContextBootstrapper.java:247] ‚Äê Found @SpringBootConfiguration com.jim.shanjupay.merchant.MerchantApplicationBootstrap for test class com.jim.shanjupay.merchant.RestTemplateTest
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:43,846 [32mINFO[m [main][AbstractTestContextBootstrapper.java:248] ‚Äê Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:43,870 [32mINFO[m [main][AbstractTestContextBootstrapper.java:177] ‚Äê Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@78452606, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@147e2ae7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@448c8166, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4470fbd6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@15d49048, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7098b907, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@503f91c3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@13526e59, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2235eaab, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@17503f6b]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:44,892 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:44,908 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:44,930 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:46,102 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a7126f27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:46,372 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:46,497 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:46,790 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:46,824 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-application.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:46,835 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@554634433 {name='merchant-application.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/merchant, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}, NacosPropertySource@424944647 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:46,953 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,469 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,487 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,529 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,532 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,535 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,536 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,537 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,537 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,537 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,538 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,539 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,540 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,542 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,543 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,543 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,543 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,544 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,544 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,544 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,544 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,544 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,544 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,545 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:50,545 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:51,451 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:51,837 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:51,847 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:51,964 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:51,999 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:52,000 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:52,656 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=14034f51-6647-381b-a3a1-d8871189cef1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,186 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$eb9bb2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,228 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,292 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,317 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,359 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,371 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,373 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$80f957a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,391 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$13a36000] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,413 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,420 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,434 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$d3e899ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,444 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c7b3a27f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,471 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$52a635ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,486 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,495 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,522 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,529 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,595 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,623 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$a0173288] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,646 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,652 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,665 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,675 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,808 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,812 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,881 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,957 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:53,977 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$d839fe5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,063 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,075 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$120ffa5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,082 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$e68bebbb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,090 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$98d8add4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,097 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$53ef93c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,108 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,142 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,172 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$7abb0af1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,201 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,211 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$c897894a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,238 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,248 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,368 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,398 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,412 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$a52c37be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,430 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,441 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,451 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,458 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,459 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,505 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,530 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,536 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,540 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,560 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a7126f27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,731 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,909 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:54,947 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,068 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,171 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,178 [32mINFO[m [main][AnnotatedInterfaceConfigBeanBuilder.java:84] ‚Äê The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,211 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,256 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,257 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,274 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,286 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,287 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,289 [36mDEBUG[m [main][SpringExtensionFactory.java:99] ‚Äê  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,299 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,382 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,469 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,473 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,509 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,521 [32mINFO[m [main][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,525 [32mINFO[m [main][AbstractSpringCloudRegistry.java:223] ‚Äê The metadata of Dubbo service[key : com.shanjupay.merchant.api.MerchantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:55,526 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,006 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,021 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,024 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,028 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,030 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,032 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,073 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,113 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,127 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,189 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,192 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,212 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,215 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,217 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,219 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,222 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,224 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,225 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,227 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,227 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,228 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,229 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,230 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,231 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,233 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,233 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,235 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,235 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,242 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,264 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,301 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,374 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,377 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,384 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,385 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,386 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,386 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,386 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,387 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,387 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,387 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,387 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,387 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,388 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,388 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,397 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,398 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,431 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 5603 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,434 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,434 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,436 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,436 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,439 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,465 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,466 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,466 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,543 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,548 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xa5e53d85, L:/127.0.0.1:49636 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,549 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,550 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,551 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,551 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,561 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,562 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,564 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1274a393
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,609 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,650 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,677 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,766 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {com.shanjupay.merchant.api.MerchantService=dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,784 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,821 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,861 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,880 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:56,889 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D5603%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678069196014%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:57,074 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:57,084 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:57,094 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:57,098 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:57,101 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:57,109 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:57,118 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:57,120 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:57,122 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service com.shanjupay.merchant.api.MerchantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.merchant.api.MerchantService%26lazy%3Dfalse%26methods%3DqueryMerchantByID%26pid%3D5603%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678069195212&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:19:59,963 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:00,322 [32mINFO[m [main][PropertySourcedRequestMappingHandlerMapping.java:69] ‚Äê Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,835 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,860 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,879 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,879 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,978 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,981 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,990 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,991 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,992 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,992 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,996 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:01,997 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:02,001 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:02,002 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:02,003 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:02,017 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:02,021 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:02,022 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:02,022 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:02,022 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:02,342 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:03,375 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:03,419 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:04,160 [36mDEBUG[m [main][DubboServiceMetadataRepository.java:273] ‚Äê The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:04,161 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:04,198 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:160] ‚Äê Context refreshed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:04,211 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:04,222 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:04,235 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:04,241 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:163] ‚Äê Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:04,269 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:04,272 [36mDEBUG[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:04,365 [32mINFO[m [main][ApiListingReferenceScanner.java:41] ‚Äê Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:04,987 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,012 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,017 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_3
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,021 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,027 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_5
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,031 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingPOST_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,105 [32mINFO[m [main][StartupInfoLogger.java:59] ‚Äê Started RestTemplateTest in 21.148 seconds (JVM running for 23.533)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,767 [32mINFO[m [main][RestTemplateTest.java:50] ‚Äê ËØ∑Ê±ÇÈ™åËØÅÁ†ÅÊúçÂä°ÂæóÂà∞Áõ∏Â∫î{}{"body":{"code":0,"msg":"","result":{"key":"sms:afdc33188a364fa7962e1d0903ab77d1"}},"headers":{"Date":["Mon, 06 Mar 2023 02:20:05 GMT"],"Content-Type":["application/json;charset=UTF-8"],"Transfer-Encoding":["chunked"]},"statusCode":"OK","statusCodeValue":200}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,786 [32mINFO[m [Thread-9][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,787 [32mINFO[m [Thread-9][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678069196021], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,788 [32mINFO[m [Thread-9][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678069196021, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,788 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,802 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,802 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,820 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,823 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,829 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069196014&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,831 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,831 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678069195212, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,832 [32mINFO[m [Thread-9][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:49636-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,837 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5603&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,838 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=5603&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,838 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=5603&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,840 [32mINFO[m [Thread-9][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0xa5e53d85, L:/127.0.0.1:49636 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,845 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5603&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,846 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5603&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,850 [32mINFO[m [Thread-9][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,857 [32mINFO[m [Thread-9][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,886 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,886 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" group="merchant-service" lazy="false" sticky="false" generic="true" version="1.0.0" generic="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,894 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:293] ‚Äê org.apache.dubbo.common.bytecode.proxy1@4366f240 was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            10:20:05,894 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
