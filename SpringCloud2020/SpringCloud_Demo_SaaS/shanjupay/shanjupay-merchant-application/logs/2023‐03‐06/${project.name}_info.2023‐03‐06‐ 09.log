[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:07,886 [32mINFO[m [main][AbstractTestContextBootstrapper.java:308] ‚Äê Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:07,900 [32mINFO[m [main][AbstractContextLoader.java:264] ‚Äê Could not detect default resource locations for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:07,901 [32mINFO[m [main][AnnotationConfigContextLoaderUtils.java:83] ‚Äê Could not detect default configuration classes for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest]: MerchantApplicationBootstrapTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:08,173 [32mINFO[m [main][SpringBootTestContextBootstrapper.java:247] ‚Äê Found @SpringBootConfiguration com.jim.shanjupay.merchant.MerchantApplicationBootstrap for test class com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:08,287 [32mINFO[m [main][AbstractTestContextBootstrapper.java:248] ‚Äê Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:08,304 [32mINFO[m [main][AbstractTestContextBootstrapper.java:177] ‚Äê Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4f49f6af, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@78452606, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@147e2ae7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@448c8166, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470fbd6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@15d49048, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7098b907, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@503f91c3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13526e59, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2235eaab]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:08,978 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:08,988 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:08,999 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:09,702 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1385cf42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:09,866 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:10,004 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:10,232 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:10,258 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-application.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:10,262 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@209360767 {name='merchant-application.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/merchant, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}, NacosPropertySource@1439361845 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:10,349 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:11,985 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:11,991 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,016 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,016 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,017 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,018 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,018 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,018 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,019 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,019 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,019 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,023 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,025 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,025 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,026 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,027 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,027 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,027 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,028 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,028 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,028 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,028 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,028 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,028 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,390 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,539 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,541 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,579 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,588 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,590 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:12,998 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=14034f51-6647-381b-a3a1-d8871189cef1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,470 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$7b2d1b49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,554 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,613 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,643 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,665 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,674 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,676 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$ed6cb7c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,693 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$8016c01b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,709 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,721 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,736 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$405bf9d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,747 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$3427029a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,776 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$bf1995c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,797 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,803 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,822 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,829 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,906 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,916 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c8a92a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,945 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,951 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,971 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:13,982 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,107 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,110 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,138 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,195 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,202 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$44ad5e79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,229 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,238 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$7e835a79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,243 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$52ff4bd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,251 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$54c0def] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,258 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c062f3de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,264 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,273 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,295 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$e72e6b0c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,319 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,326 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$350ae965] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,344 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,359 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,424 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,458 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,471 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$119f97d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,488 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,497 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,506 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,512 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,514 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,563 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,583 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,588 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,591 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,609 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1385cf42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:14,767 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,056 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,098 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,190 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,259 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,267 [32mINFO[m [main][AnnotatedInterfaceConfigBeanBuilder.java:84] ‚Äê The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,315 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,367 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,370 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,386 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,397 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,398 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,400 [36mDEBUG[m [main][SpringExtensionFactory.java:99] ‚Äê  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,407 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,443 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,467 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,467 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,475 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,478 [32mINFO[m [main][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,478 [32mINFO[m [main][AbstractSpringCloudRegistry.java:223] ‚Äê The metadata of Dubbo service[key : com.shanjupay.merchant.api.MerchantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,478 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,750 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,759 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,765 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,770 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,772 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,773 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,831 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,871 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,880 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,908 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,911 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,928 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,935 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,938 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,942 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,944 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,945 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,947 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,949 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,950 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,951 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,952 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,954 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,955 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,959 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,960 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,964 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,966 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:15,974 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,004 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,031 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,084 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,085 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,089 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,092 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,092 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,093 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,093 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,093 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,093 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,093 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,094 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,094 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,094 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,094 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,099 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,099 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,126 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 4271 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,129 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,129 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,131 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,132 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,138 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,161 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,163 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,163 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,247 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,249 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x313b5ec4, L:/127.0.0.1:62862 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,250 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,250 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,250 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,250 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,259 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,260 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,266 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@389fcf2b
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,306 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,336 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,361 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,404 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {com.shanjupay.merchant.api.MerchantService=dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,407 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,428 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,566 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,582 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,589 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D4271%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678067055754%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,912 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,925 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,940 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,944 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,948 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,961 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,969 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,972 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:16,974 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service com.shanjupay.merchant.api.MerchantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.merchant.api.MerchantService%26lazy%3Dfalse%26methods%3DqueryMerchantByID%26pid%3D4271%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678067055315&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:19,152 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:19,512 [32mINFO[m [main][PropertySourcedRequestMappingHandlerMapping.java:69] ‚Äê Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,788 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,797 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,804 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,804 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,879 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,881 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,901 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,903 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,903 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,904 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,907 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,907 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,910 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,911 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,911 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,921 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,924 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,924 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,925 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:20,925 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:21,088 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:21,668 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:21,704 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,395 [36mDEBUG[m [main][DubboServiceMetadataRepository.java:273] ‚Äê The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,403 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,440 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:160] ‚Äê Context refreshed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,457 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,468 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,476 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:163] ‚Äê Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,477 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,528 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,541 [36mDEBUG[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,599 [32mINFO[m [main][ApiListingReferenceScanner.java:41] ‚Äê Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,968 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,984 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,991 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_3
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:22,996 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,001 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_5
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,005 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingPOST_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,077 [32mINFO[m [Thread-9][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,077 [32mINFO[m [main][StartupInfoLogger.java:59] ‚Äê Started MerchantApplicationBootstrapTest in 14.692 seconds (JVM running for 17.091)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,082 [32mINFO[m [Thread-9][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678067055759], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,084 [32mINFO[m [Thread-9][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678067055759, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,086 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,106 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,106 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,111 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,117 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,124 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055315, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,128 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,131 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4271&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067055754&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,136 [32mINFO[m [Thread-9][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:62862-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,144 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=4271&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,146 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4271&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,146 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4271&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,149 [32mINFO[m [Thread-9][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0x313b5ec4, L:/127.0.0.1:62862 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,153 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=4271&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,154 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4271&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,158 [32mINFO[m [Thread-9][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,171 [32mINFO[m [Thread-9][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,198 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,201 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" lazy="false" sticky="false" generic="true" group="merchant-service" version="1.0.0" generic="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,218 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:293] ‚Äê org.apache.dubbo.common.bytecode.proxy1@5b93f270 was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:23,219 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:28,944 [32mINFO[m [main][AbstractTestContextBootstrapper.java:308] ‚Äê Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:28,957 [32mINFO[m [main][AbstractContextLoader.java:264] ‚Äê Could not detect default resource locations for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:28,957 [32mINFO[m [main][AnnotationConfigContextLoaderUtils.java:83] ‚Äê Could not detect default configuration classes for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest]: MerchantApplicationBootstrapTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:29,202 [32mINFO[m [main][SpringBootTestContextBootstrapper.java:247] ‚Äê Found @SpringBootConfiguration com.jim.shanjupay.merchant.MerchantApplicationBootstrap for test class com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:29,351 [32mINFO[m [main][AbstractTestContextBootstrapper.java:248] ‚Äê Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:29,364 [32mINFO[m [main][AbstractTestContextBootstrapper.java:177] ‚Äê Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4f49f6af, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@78452606, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@147e2ae7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@448c8166, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470fbd6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@15d49048, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7098b907, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@503f91c3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13526e59, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2235eaab]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:30,015 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:30,026 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:30,033 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:30,809 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1385cf42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:30,971 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:31,082 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:31,290 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:31,313 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-application.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:31,317 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1439361845 {name='merchant-application.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/merchant, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}, NacosPropertySource@1837533591 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:31,404 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,092 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,100 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,115 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,118 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,119 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,120 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,120 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,121 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,121 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,121 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,122 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,125 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,126 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,129 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,129 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,129 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,130 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,130 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,130 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,130 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,131 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,131 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,131 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,132 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,621 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,743 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,744 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,779 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,785 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:33,787 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:34,213 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=14034f51-6647-381b-a3a1-d8871189cef1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:34,666 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$7b2d1b49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:34,703 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:34,753 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:34,853 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:34,944 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:34,954 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:34,956 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$ed6cb7c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:34,972 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$8016c01b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:34,987 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:34,993 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,007 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$405bf9d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,016 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$3427029a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,053 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$bf1995c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,076 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,081 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,108 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,117 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,224 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,234 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c8a92a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,265 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,278 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,322 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,342 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,486 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,490 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,519 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,558 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,568 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$44ad5e79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,593 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,603 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$7e835a79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,610 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$52ff4bd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,616 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$54c0def] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,624 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c062f3de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,630 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,641 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,652 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$e72e6b0c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,675 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,681 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$350ae965] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,698 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,709 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,765 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,809 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,822 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$119f97d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,839 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,845 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,855 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,861 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,863 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,921 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,943 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,951 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,954 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:35,974 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1385cf42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,136 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,402 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,438 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,544 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,663 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,674 [32mINFO[m [main][AnnotatedInterfaceConfigBeanBuilder.java:84] ‚Äê The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,731 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,777 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,779 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,794 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,808 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,809 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,812 [36mDEBUG[m [main][SpringExtensionFactory.java:99] ‚Äê  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,820 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,879 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,933 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,934 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,949 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,951 [32mINFO[m [main][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,951 [32mINFO[m [main][AbstractSpringCloudRegistry.java:223] ‚Äê The metadata of Dubbo service[key : com.shanjupay.merchant.api.MerchantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:36,952 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,160 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,170 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,174 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,180 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,183 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,187 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,222 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,245 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,252 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,275 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,279 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,292 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,295 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,296 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,296 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,298 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,299 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,300 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,302 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,303 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,304 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,304 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,304 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,305 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,306 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,306 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,307 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,307 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,313 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,327 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,341 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,377 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,378 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,383 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,385 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,385 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,386 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,387 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,387 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,388 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,388 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,388 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,388 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,389 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,389 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,395 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,396 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,437 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 4317 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,444 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,445 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,447 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,449 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,456 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,483 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,484 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,484 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,560 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,562 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xfda763ad, L:/127.0.0.1:62914 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,566 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,568 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,568 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,568 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,575 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,576 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,578 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4269b02
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,647 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,692 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,714 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,776 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {com.shanjupay.merchant.api.MerchantService=dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,781 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,797 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,818 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,829 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:37,834 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D4317%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678067077166%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:38,020 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:38,035 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:38,057 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:38,079 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:38,087 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:38,101 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:38,137 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:38,148 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:38,153 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service com.shanjupay.merchant.api.MerchantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.merchant.api.MerchantService%26lazy%3Dfalse%26methods%3DqueryMerchantByID%26pid%3D4317%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678067076732&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:40,302 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:40,562 [32mINFO[m [main][PropertySourcedRequestMappingHandlerMapping.java:69] ‚Äê Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,673 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,681 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,687 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,687 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,739 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,740 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,749 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,750 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,751 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,751 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,758 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,760 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,763 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,764 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,764 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,773 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,773 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,773 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,774 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,774 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:41,926 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:42,401 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:42,450 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,101 [36mDEBUG[m [main][DubboServiceMetadataRepository.java:273] ‚Äê The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,106 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,184 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:160] ‚Äê Context refreshed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,202 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,208 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:163] ‚Äê Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,214 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,224 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,266 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,274 [36mDEBUG[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,298 [32mINFO[m [main][ApiListingReferenceScanner.java:41] ‚Äê Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,587 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,598 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,609 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_3
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,614 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,621 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_5
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,625 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingPOST_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:43,680 [32mINFO[m [main][StartupInfoLogger.java:59] ‚Äê Started MerchantApplicationBootstrapTest in 14.242 seconds (JVM running for 16.28)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,104 [32mINFO[m [Thread-9][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,106 [32mINFO[m [Thread-9][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678067077170], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,107 [32mINFO[m [Thread-9][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678067077170, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,107 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,114 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,115 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,119 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,122 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,125 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067077166&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,131 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,131 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067076732, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,132 [32mINFO[m [Thread-9][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:62914-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,134 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4317&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,135 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=4317&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,136 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4317&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,138 [32mINFO[m [Thread-9][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0xfda763ad, L:/127.0.0.1:62914 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,140 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=4317&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,141 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4317&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,143 [32mINFO[m [Thread-9][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,151 [32mINFO[m [Thread-9][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,174 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,176 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" lazy="false" group="merchant-service" sticky="false" generic="true" generic="true" version="1.0.0" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,178 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:293] ‚Äê org.apache.dubbo.common.bytecode.proxy1@6a044e97 was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:44:44,179 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:18,041 [32mINFO[m [main][AbstractTestContextBootstrapper.java:308] ‚Äê Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:18,054 [32mINFO[m [main][AbstractContextLoader.java:264] ‚Äê Could not detect default resource locations for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:18,055 [32mINFO[m [main][AnnotationConfigContextLoaderUtils.java:83] ‚Äê Could not detect default configuration classes for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest]: MerchantApplicationBootstrapTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:18,300 [32mINFO[m [main][SpringBootTestContextBootstrapper.java:247] ‚Äê Found @SpringBootConfiguration com.jim.shanjupay.merchant.MerchantApplicationBootstrap for test class com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:18,421 [32mINFO[m [main][AbstractTestContextBootstrapper.java:248] ‚Äê Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:18,434 [32mINFO[m [main][AbstractTestContextBootstrapper.java:177] ‚Äê Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4f49f6af, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@78452606, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@147e2ae7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@448c8166, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470fbd6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@15d49048, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7098b907, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@503f91c3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13526e59, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2235eaab]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:19,157 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:19,168 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:19,179 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:19,929 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1385cf42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:20,128 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:20,259 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:20,532 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:20,577 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-application.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:20,588 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1837533591 {name='merchant-application.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/merchant, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}, NacosPropertySource@741883443 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:20,686 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,619 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,627 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,663 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,663 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,664 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,665 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,666 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,668 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,669 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,669 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,669 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,672 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,675 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,676 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,677 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,677 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,677 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,677 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,678 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,679 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,679 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,679 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,679 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:22,680 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:23,092 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:23,234 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:23,236 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:23,284 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:23,293 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:23,293 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:23,770 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=14034f51-6647-381b-a3a1-d8871189cef1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,276 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$7b2d1b49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,323 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,385 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,413 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,448 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,461 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,464 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$ed6cb7c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,489 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$8016c01b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,507 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,522 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,536 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$405bf9d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,548 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$3427029a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,576 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$bf1995c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,594 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,599 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,622 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,633 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,711 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,720 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c8a92a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,740 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,745 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,759 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,770 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,894 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,896 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,921 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,958 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:24,967 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$44ad5e79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,000 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,011 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$7e835a79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,018 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$52ff4bd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,027 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$54c0def] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,035 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c062f3de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,045 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,059 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,079 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$e72e6b0c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,107 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,113 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$350ae965] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,138 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,149 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,202 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,240 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,257 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$119f97d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,279 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,289 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,299 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,306 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,308 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,348 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,366 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,371 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,373 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,388 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1385cf42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,607 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,800 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,839 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:25,980 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,062 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,069 [32mINFO[m [main][AnnotatedInterfaceConfigBeanBuilder.java:84] ‚Äê The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,113 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,167 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,169 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,182 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,198 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,198 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,201 [36mDEBUG[m [main][SpringExtensionFactory.java:99] ‚Äê  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,209 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,249 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,269 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,270 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,280 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,283 [32mINFO[m [main][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,284 [32mINFO[m [main][AbstractSpringCloudRegistry.java:223] ‚Äê The metadata of Dubbo service[key : com.shanjupay.merchant.api.MerchantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,285 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,521 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,534 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,538 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,545 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,547 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,549 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,595 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,626 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,635 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,668 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,670 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,692 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,697 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,698 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,699 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,701 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,704 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,706 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,709 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,710 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,712 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,712 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,713 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,714 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,718 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,719 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,723 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,724 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,735 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,763 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,804 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,868 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,869 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,875 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,877 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,877 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,878 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,878 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,878 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,878 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,879 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,879 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,879 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,879 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,879 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,885 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,886 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,920 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 4340 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,923 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,923 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,926 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,927 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,933 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,957 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,958 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:26,959 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,050 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,052 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x9db0e458, L:/127.0.0.1:63004 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,057 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,057 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,058 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,058 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,070 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,071 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,075 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@23e21c43
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,147 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,190 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,217 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,349 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {com.shanjupay.merchant.api.MerchantService=dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,358 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,414 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,436 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,451 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,459 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D4340%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678067126529%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,685 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,691 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,703 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,711 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,714 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,724 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,740 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,744 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:27,747 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service com.shanjupay.merchant.api.MerchantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.merchant.api.MerchantService%26lazy%3Dfalse%26methods%3DqueryMerchantByID%26pid%3D4340%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678067126113&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:30,519 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:30,786 [32mINFO[m [main][PropertySourcedRequestMappingHandlerMapping.java:69] ‚Äê Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,097 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,107 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,117 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,118 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,278 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,283 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,292 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,293 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,293 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,294 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,300 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,301 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,304 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,304 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,304 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,318 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,319 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,320 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,320 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,320 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,462 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,946 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:32,979 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:33,620 [36mDEBUG[m [main][DubboServiceMetadataRepository.java:273] ‚Äê The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:33,621 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:33,649 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:160] ‚Äê Context refreshed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:33,660 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:33,684 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:33,685 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:163] ‚Äê Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:33,691 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:33,714 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:33,717 [36mDEBUG[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:33,753 [32mINFO[m [main][ApiListingReferenceScanner.java:41] ‚Äê Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,087 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,102 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,111 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_3
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,124 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,129 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_5
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,135 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingPOST_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,207 [32mINFO[m [main][StartupInfoLogger.java:59] ‚Äê Started MerchantApplicationBootstrapTest in 15.705 seconds (JVM running for 18.02)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,693 [32mINFO[m [Thread-9][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,695 [32mINFO[m [Thread-9][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678067126534], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,697 [32mINFO[m [Thread-9][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678067126534, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,698 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,706 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,707 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,713 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,714 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,714 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126529&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,716 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,717 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067126113, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,719 [32mINFO[m [Thread-9][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:63004-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,721 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4340&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,722 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=4340&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,722 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4340&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,723 [32mINFO[m [Thread-9][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0x9db0e458, L:/127.0.0.1:63004 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,725 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=4340&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,726 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4340&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,731 [32mINFO[m [Thread-9][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,735 [32mINFO[m [Thread-9][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,757 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,759 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" lazy="false" sticky="false" generic="true" version="1.0.0" generic="true" group="merchant-service" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,762 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:293] ‚Äê org.apache.dubbo.common.bytecode.proxy1@3a8684fa was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:34,762 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:53,894 [32mINFO[m [main][AbstractTestContextBootstrapper.java:308] ‚Äê Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:53,906 [32mINFO[m [main][AbstractContextLoader.java:264] ‚Äê Could not detect default resource locations for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:53,907 [32mINFO[m [main][AnnotationConfigContextLoaderUtils.java:83] ‚Äê Could not detect default configuration classes for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest]: MerchantApplicationBootstrapTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:54,098 [32mINFO[m [main][SpringBootTestContextBootstrapper.java:247] ‚Äê Found @SpringBootConfiguration com.jim.shanjupay.merchant.MerchantApplicationBootstrap for test class com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:54,220 [32mINFO[m [main][AbstractTestContextBootstrapper.java:248] ‚Äê Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:54,234 [32mINFO[m [main][AbstractTestContextBootstrapper.java:177] ‚Äê Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4f49f6af, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@78452606, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@147e2ae7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@448c8166, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470fbd6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@15d49048, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7098b907, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@503f91c3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13526e59, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2235eaab]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:55,011 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:55,021 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:55,038 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:56,009 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$edc4e996] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:56,201 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:56,337 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:56,594 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:56,618 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-application.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:56,625 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1837533591 {name='merchant-application.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/merchant, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}, NacosPropertySource@741883443 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:56,714 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,639 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,645 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,660 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,661 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,662 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,663 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,664 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,664 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,664 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,664 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,665 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,666 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,670 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,671 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,671 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,671 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,671 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,671 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,672 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,672 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,672 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,672 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,673 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:58,673 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:59,101 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:59,320 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:59,321 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:59,371 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:59,386 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:59,388 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:45:59,757 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=14034f51-6647-381b-a3a1-d8871189cef1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,175 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$556c359d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,221 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,287 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,323 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,356 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,367 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,373 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$c7abd217] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,390 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$5a55da6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,407 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,418 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,433 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$1a9b1429] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,442 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e661cee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,474 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$9958b01d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,493 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,500 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,526 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,536 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,611 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,621 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e6c9acf7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,649 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,653 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,668 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,673 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,794 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,797 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,827 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,873 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,882 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$1eec78cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,917 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,945 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$58c274cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,965 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$2d3e662a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,982 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$df8b2843] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,991 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$9aa20e32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:00,999 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,010 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,024 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$c16d8560] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,044 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,051 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$f4a03b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,079 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,092 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,165 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,201 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,218 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$ebdeb22d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,243 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,257 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,270 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,278 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,279 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,334 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,356 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,363 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,367 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,389 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$edc4e996] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,631 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,845 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:01,888 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,048 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,149 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,156 [32mINFO[m [main][AnnotatedInterfaceConfigBeanBuilder.java:84] ‚Äê The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,189 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,249 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,251 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,269 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,288 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,289 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,294 [36mDEBUG[m [main][SpringExtensionFactory.java:99] ‚Äê  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,307 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,377 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,414 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,416 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,439 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,447 [32mINFO[m [main][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,450 [32mINFO[m [main][AbstractSpringCloudRegistry.java:223] ‚Äê The metadata of Dubbo service[key : com.shanjupay.merchant.api.MerchantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,450 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,709 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,719 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,724 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,730 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,735 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,739 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,792 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,823 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,832 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,863 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,869 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,890 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,895 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,896 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,898 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,900 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,903 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,906 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,910 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,911 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,912 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,912 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,913 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,913 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,915 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,915 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,917 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,918 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,925 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,945 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:02,967 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,021 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,022 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,028 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,029 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,029 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,029 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,029 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,030 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,030 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,031 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,031 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,032 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,032 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,033 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,036 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,037 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,066 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 4391 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,070 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,070 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,072 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,073 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,077 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,096 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,096 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,096 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,191 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,194 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x379232b4, L:/127.0.0.1:63072 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,194 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,194 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,194 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,195 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,206 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,208 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,212 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@274b8624
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,273 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,315 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,342 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,374 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {com.shanjupay.merchant.api.MerchantService=dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,379 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,470 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,505 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,523 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,531 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D4391%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678067162713%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,680 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,687 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,699 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,704 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,707 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,713 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,721 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,723 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:03,724 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service com.shanjupay.merchant.api.MerchantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.merchant.api.MerchantService%26lazy%3Dfalse%26methods%3DqueryMerchantByID%26pid%3D4391%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678067162189&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:06,382 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:06,703 [32mINFO[m [main][PropertySourcedRequestMappingHandlerMapping.java:69] ‚Äê Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,260 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,273 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,284 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,285 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,415 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,416 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,426 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,427 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,427 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,428 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,435 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,439 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,444 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,446 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,446 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,463 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,465 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,465 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,465 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,465 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:08,648 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:09,326 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:09,364 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:09,949 [36mDEBUG[m [main][DubboServiceMetadataRepository.java:273] ‚Äê The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:09,949 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:09,980 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:160] ‚Äê Context refreshed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:09,990 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,006 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,018 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,021 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:163] ‚Äê Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,058 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,062 [36mDEBUG[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,091 [32mINFO[m [main][ApiListingReferenceScanner.java:41] ‚Äê Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,808 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,863 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,889 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_3
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,923 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,939 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_5
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:10,950 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingPOST_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,053 [32mINFO[m [main][StartupInfoLogger.java:59] ‚Äê Started MerchantApplicationBootstrapTest in 16.746 seconds (JVM running for 18.778)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,698 [32mINFO[m [Thread-9][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,700 [32mINFO[m [Thread-9][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678067162719], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,700 [32mINFO[m [Thread-9][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678067162719, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,701 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,714 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,714 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,719 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,723 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,725 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162713&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,726 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,726 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067162189, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,727 [32mINFO[m [Thread-9][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:63072-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,729 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4391&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,732 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=4391&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,733 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4391&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,736 [32mINFO[m [Thread-9][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0x379232b4, L:/127.0.0.1:63072 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,739 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=4391&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,739 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4391&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,742 [32mINFO[m [Thread-9][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,748 [32mINFO[m [Thread-9][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,763 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,764 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" lazy="false" sticky="false" group="merchant-service" generic="true" generic="true" version="1.0.0" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,767 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:293] ‚Äê org.apache.dubbo.common.bytecode.proxy1@3bbc4f07 was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:46:11,767 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:48:58,952 [32mINFO[m [main][AbstractTestContextBootstrapper.java:308] ‚Äê Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:48:58,965 [32mINFO[m [main][AbstractContextLoader.java:264] ‚Äê Could not detect default resource locations for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:48:58,966 [32mINFO[m [main][AnnotationConfigContextLoaderUtils.java:83] ‚Äê Could not detect default configuration classes for test class [com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest]: MerchantApplicationBootstrapTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:48:59,172 [32mINFO[m [main][SpringBootTestContextBootstrapper.java:247] ‚Äê Found @SpringBootConfiguration com.jim.shanjupay.merchant.MerchantApplicationBootstrap for test class com.jim.shanjupay.merchant.MerchantApplicationBootstrapTest
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:48:59,303 [32mINFO[m [main][AbstractTestContextBootstrapper.java:248] ‚Äê Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:48:59,325 [32mINFO[m [main][AbstractTestContextBootstrapper.java:177] ‚Äê Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d322cad, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@21be3395, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4f49f6af, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@78452606, org.springframework.test.context.support.DirtiesContextTestExecutionListener@147e2ae7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@448c8166, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4470fbd6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@15d49048, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7098b907, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@503f91c3]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:00,010 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:00,020 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:00,047 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:00,901 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1a98822e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:01,076 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:01,194 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:01,430 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:01,449 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-application.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:01,454 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@424944647 {name='merchant-application.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/merchant, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}, NacosPropertySource@1872088401 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:01,534 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,260 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,266 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,280 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,280 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,281 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,282 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,283 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,283 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,283 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,283 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,283 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,284 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,286 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,287 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,288 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,289 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,289 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,289 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,289 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,289 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,290 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,290 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,290 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,290 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,657 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,793 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,794 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,830 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,838 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:03,840 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,219 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=14034f51-6647-381b-a3a1-d8871189cef1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,574 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$823fce35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,621 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,669 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,692 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,714 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,725 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,727 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$f47f6aaf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,741 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$87297307] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,753 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,757 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,767 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$476eacc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,775 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$3b39b586] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,805 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$c62c48b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,823 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,826 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,861 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,872 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,940 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,947 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$139d458f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,969 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,973 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,984 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:04,990 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,147 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,153 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,185 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,217 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,223 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$4bc01165] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,244 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,252 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$85960d65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,257 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$5a11fec2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,264 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$c5ec0db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,269 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c775a6ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,275 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,285 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,295 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$ee411df8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,319 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,324 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$3c1d9c51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,344 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,354 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,418 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,452 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,470 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$18b24ac5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,487 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,498 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,508 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,515 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,516 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,552 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,572 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,576 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,577 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,591 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1a98822e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,793 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:05,978 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,025 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,152 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,224 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,229 [32mINFO[m [main][AnnotatedInterfaceConfigBeanBuilder.java:84] ‚Äê The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,263 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,318 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,321 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,339 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,360 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,361 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,363 [36mDEBUG[m [main][SpringExtensionFactory.java:99] ‚Äê  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,375 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,411 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,430 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,432 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,439 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,441 [32mINFO[m [main][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,441 [32mINFO[m [main][AbstractSpringCloudRegistry.java:223] ‚Äê The metadata of Dubbo service[key : com.shanjupay.merchant.api.MerchantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,441 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,618 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,624 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,626 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,629 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,630 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,632 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,660 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,686 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,690 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,708 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,713 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,729 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,732 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,733 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,734 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,735 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,736 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,738 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,740 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,741 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,741 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,741 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,741 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,742 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,743 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,743 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,744 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,745 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,750 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,762 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,775 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,819 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,820 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,826 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,829 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,829 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,830 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,830 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,830 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,830 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,831 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,831 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,831 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,831 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,831 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,835 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,836 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,866 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 4601 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,870 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,871 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,875 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,876 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,880 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,916 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,917 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,917 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,970 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,973 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,974 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,974 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,974 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x43a35703, L:/127.0.0.1:63379 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,975 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,981 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,982 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:06,983 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7e5806b1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,029 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,075 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,112 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,223 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {com.shanjupay.merchant.api.MerchantService=dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,227 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,297 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,366 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,393 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0, urls: [dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=2644&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678062700375&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,401 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D4601%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678067346619%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,669 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,683 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,697 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,709 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,716 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,726 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,736 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,740 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264, urls: [dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=2644&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1678062699052], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:07,742 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service com.shanjupay.merchant.api.MerchantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.merchant.api.MerchantService%26lazy%3Dfalse%26methods%3DqueryMerchantByID%26pid%3D4601%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678067346264&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:09,974 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:10,237 [32mINFO[m [main][PropertySourcedRequestMappingHandlerMapping.java:69] ‚Äê Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,548 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,558 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,566 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,566 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,636 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,639 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,647 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,648 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,649 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,649 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,653 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,655 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,658 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,659 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,659 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,669 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,671 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,672 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,672 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,672 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:11,808 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:12,408 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:12,435 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,192 [36mDEBUG[m [main][DubboServiceMetadataRepository.java:273] ‚Äê The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,199 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,230 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:160] ‚Äê Context refreshed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,251 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,266 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,280 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] ‚Äê The Dubbo Service URL[ID : consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,283 [32mINFO[m [main][DocumentationPluginsBootstrapper.java:163] ‚Äê Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,318 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20890-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,330 [36mDEBUG[m [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] ‚Äê The subscribed URL[consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264] will notify all URLs : [dubbo://192.168.199.177:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&methods=queryMerchantByID&pid=2644&register=true&release=2.7.3&side=provider&timestamp=1678062699052]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,386 [32mINFO[m [main][ApiListingReferenceScanner.java:41] ‚Äê Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,804 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,820 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,826 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_3
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,831 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,839 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingGET_5
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,841 [32mINFO[m [main][CachingOperationNameGenerator.java:40] ‚Äê Generating unique operation named: handleUsingPOST_1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:13,902 [32mINFO[m [main][StartupInfoLogger.java:59] ‚Äê Started MerchantApplicationBootstrapTest in 14.453 seconds (JVM running for 16.566)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,426 [32mINFO[m [Thread-9][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,428 [32mINFO[m [Thread-9][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678067346624], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,428 [32mINFO[m [Thread-9][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678067346624, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,429 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,439 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,440 [32mINFO[m [Thread-9][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,444 [32mINFO[m [Thread-9][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,447 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,449 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/com.shanjupay.merchant.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346264, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,450 [32mINFO[m [Thread-9][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,450 [32mINFO[m [Thread-9][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=4601&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678067346619&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,450 [32mINFO[m [Thread-9][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:63379-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,452 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=4601&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,455 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&path=com.shanjupay.merchant.api.MerchantService&pid=4601&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,455 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4601&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,456 [32mINFO[m [Thread-9][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0x43a35703, L:/127.0.0.1:63379 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,459 [32mINFO[m [Thread-9][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20890/com.shanjupay.merchant.api.MerchantService?anyhost=true&application=merchant-application&bean.name=ServiceBean:com.shanjupay.merchant.api.MerchantService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.merchant.api.MerchantService&lazy=false&methods=queryMerchantByID&pid=4601&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678062699052, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,459 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20890&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=4601&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678062700375&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,461 [32mINFO[m [Thread-9][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,466 [32mINFO[m [Thread-9][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,480 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,481 [32mINFO[m [Thread-9][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" lazy="false" sticky="false" generic="true" generic="true" group="merchant-service" version="1.0.0" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,484 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:293] ‚Äê org.apache.dubbo.common.bytecode.proxy1@3a8684fa was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê06
            09:49:14,484 [32mINFO[m [Thread-9][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
