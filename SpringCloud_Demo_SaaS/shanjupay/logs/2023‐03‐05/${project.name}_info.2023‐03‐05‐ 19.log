[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:00:12,041 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:00:42,093 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:01:12,159 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:01:42,223 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:02:12,247 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:02:42,283 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:03:12,311 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:03:42,354 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:04:12,400 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:04:42,436 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:05:12,468 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:05:42,514 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:06:12,616 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:06:42,669 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:07:12,695 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:07:42,719 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:08:12,754 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:08:42,778 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:09:12,865 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:09:42,911 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:10:12,976 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:10:43,013 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:11:13,056 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:11:43,089 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:12:13,162 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:12:43,244 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:13,288 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:43,316 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:47,815 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:47,825 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:47,873 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:48,316 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a93c64c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:48,447 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:48,515 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:48,819 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:48,855 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:48,864 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1119242936 {name='merchant-service.yaml', properties={server.servlet.context‚Äêpath=/merchant‚Äêservice}}, NacosPropertySource@2123914473 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:48,938 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,045 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,049 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,075 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:221] ‚Äê Searching for mappers annotated with @Mapper
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,077 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:225] ‚Äê Using auto-configuration base package 'com.shanjupay.merchant'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,082 [36mDEBUG[m [main][LogFactory.java:105] ‚Äê Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,087 [33mWARN[m [main][Logger.java:44] ‚Äê No MyBatis mapper was found in '[com.shanjupay.merchant]' package. Please check your configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,096 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,096 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,096 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,096 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,097 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,098 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,098 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,099 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,099 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,100 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,101 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,101 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,101 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,101 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,102 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,102 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,102 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,103 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,103 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,103 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,103 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,103 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,416 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,494 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,498 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,556 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,563 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:50,563 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,017 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=bd8ea26f-e0b2-301f-8386-eef1ab9e21d8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,199 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8d2261cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,366 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$10e3b0d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,542 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,568 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,591 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,601 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,606 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,607 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$83234d4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,611 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$15cd55a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,617 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,620 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,626 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$d6128f5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,636 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c9dd9821] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,656 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$54d02b50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,665 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,668 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,682 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,687 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,708 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,710 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$a241282a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,722 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,726 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,732 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,736 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,832 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,836 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,916 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,942 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,947 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$da63f400] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,962 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,967 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$1439f000] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,972 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$e8b5e15d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,978 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$9b02a376] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,984 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$56198965] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,992 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:51,996 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,010 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$7ce50093] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,030 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,038 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$cac17eec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,054 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,064 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,106 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,133 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,146 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$a7562d60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,161 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,167 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,174 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,179 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,180 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,196 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,206 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,208 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,210 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,221 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a93c64c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,535 [32mINFO[m [main][TomcatWebServer.java:90] ‚Äê Tomcat initialized with port(s): 56040 (http)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,553 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,562 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,562 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,572 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/hsk/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,679 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:52,680 [32mINFO[m [main][ServletWebServerApplicationContext.java:296] ‚Äê Root WebApplicationContext: initialization completed in 3723 ms
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:53,150 [32mINFO[m [main][DruidDataSourceAutoConfigure.java:56] ‚Äê Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:53,215 [1;31mERROR[m [main][TomcatStarter.java:62] ‚Äê Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthIndicatorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthIndicatorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthIndicatorRegistry]: Factory method 'healthIndicatorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:53,240 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Stopping service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:53,251 [33mWARN[m [main][AbstractApplicationContext.java:557] ‚Äê Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:53,254 [32mINFO[m [main][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:53,255 [32mINFO[m [main][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:53,269 [32mINFO[m [main][ConditionEvaluationReportLoggingListener.java:142] ‚Äê 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:53,270 [32mINFO[m [main][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:13:53,274 [1;31mERROR[m [main][LoggingFailureAnalysisReporter.java:42] ‚Äê 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:14:13,403 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:14:43,445 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:15:13,489 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:15:43,520 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:16:13,553 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:16:43,588 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:17:13,631 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:17:43,680 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:18:13,725 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:18:43,765 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:19:13,874 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:19:43,916 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:20:13,959 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:20:43,985 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:21:14,025 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:21:44,058 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:22:14,095 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:22:44,131 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:23:14,203 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:23:44,260 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:24:14,306 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:24:44,328 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:25:14,373 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:25:44,445 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:26:14,478 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:26:44,535 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:08,975 [32mINFO[m [DubboShutdownHook][DubboShutdownHook.java:58] ‚Äê  [DUBBO] Run shutdown hook now., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:09,006 [32mINFO[m [DubboShutdownHook][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:12,985 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:13,051 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:13,062 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:13,502 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2180af14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:13,625 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:13,690 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:13,893 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:13,909 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:13,914 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@2123914473 {name='merchant-service.yaml', properties={server.servlet.context‚Äêpath=/merchant‚Äêservice}}, NacosPropertySource@708443754 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:13,951 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,557 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,878 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,881 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,910 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:221] ‚Äê Searching for mappers annotated with @Mapper
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,911 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:225] ‚Äê Using auto-configuration base package 'com.shanjupay.merchant'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,916 [36mDEBUG[m [main][LogFactory.java:105] ‚Äê Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,923 [33mWARN[m [main][Logger.java:44] ‚Äê No MyBatis mapper was found in '[com.shanjupay.merchant]' package. Please check your configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,935 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,935 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,935 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,935 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,935 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,936 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,937 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,937 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,938 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,938 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,939 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,940 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,940 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,940 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,940 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,941 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,941 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,941 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,941 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,941 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,942 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:14,942 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,137 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,221 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,221 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,226 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,229 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,229 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,474 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=bd8ea26f-e0b2-301f-8386-eef1ab9e21d8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,640 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$566ac17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,733 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$8927fb1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,869 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,897 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,913 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,923 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,928 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,928 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$fb679795] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,933 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$8e119fed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,939 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,942 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,947 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$4e56d9a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,955 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$4221e26c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,971 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$cd14759b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,980 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,982 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:15,996 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,003 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,025 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,029 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$1a857275] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,043 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,046 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,053 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,058 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,136 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,138 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,229 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,277 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,285 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$52a83e4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,311 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,317 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$8c7e3a4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,324 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$60fa2ba8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,329 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$1346edc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,336 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ce5dd3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,343 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,348 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,362 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$f5294ade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,395 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,405 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$4305c937] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,426 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,435 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,472 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,499 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,514 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$1f9a77ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,524 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,532 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,542 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,548 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,550 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,571 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,582 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,585 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,587 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,600 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2180af14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,945 [32mINFO[m [main][TomcatWebServer.java:90] ‚Äê Tomcat initialized with port(s): 56040 (http)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,961 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,970 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,971 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:16,980 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/hsk/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:17,086 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:17,087 [32mINFO[m [main][ServletWebServerApplicationContext.java:296] ‚Äê Root WebApplicationContext: initialization completed in 3122 ms
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:17,432 [32mINFO[m [main][DruidDataSourceAutoConfigure.java:56] ‚Äê Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:17,555 [32mINFO[m [main][DruidDataSource.java:1002] ‚Äê {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,217 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,220 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,224 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,224 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,270 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,271 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,277 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,278 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,278 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,278 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,280 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,281 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,282 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,282 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,283 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,287 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,288 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,288 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,289 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,289 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,394 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,675 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,700 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:263] ‚Äê No org.mybatis.spring.mapper.MapperFactoryBean found.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,743 [36mDEBUG[m [main][GlobalConfigUtils.java:106] ‚Äê DeBug: MyBatis Plus Global configuration Initializing !
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,750 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectList
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,750 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectObjs
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,751 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Insert
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,751 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Update
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,752 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Delete
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:18,752 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Count
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,002 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,015 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,029 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,536 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,601 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-application] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,747 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,829 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,850 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,916 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,924 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,926 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,935 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,942 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,943 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,943 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,955 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,963 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,964 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,969 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:19,988 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,005 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,008 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,030 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,030 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,033 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,035 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,036 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,036 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,037 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,038 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,039 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,040 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,040 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,040 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,040 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,041 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,041 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,042 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,042 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,044 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,044 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,045 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,064 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,076 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,098 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,099 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,103 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,104 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,104 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,104 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,105 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,105 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,105 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,106 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,107 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,108 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,108 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,108 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,111 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,111 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,126 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 9257 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,128 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,128 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,130 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,130 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,133 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,145 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,145 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,145 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,198 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,200 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,200 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,201 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,201 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x25fe0710, L:/127.0.0.1:59848 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,201 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,217 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,220 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,223 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4ffec374
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,261 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,290 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,331 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,352 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,495 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,527 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0, urls: [dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,530 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0, urls: [dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,535 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-application%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D9257%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678015639917%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,632 [36mDEBUG[m [NettyServerWorker-3-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,636 [36mDEBUG[m [NettyServerWorker-3-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,636 [36mDEBUG[m [NettyServerWorker-3-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,636 [36mDEBUG[m [NettyServerWorker-3-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,645 [36mDEBUG[m [NettyServerWorker-3-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,645 [36mDEBUG[m [NettyServerWorker-3-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,647 [36mDEBUG[m [NettyServerWorker-3-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@fa7fad
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,715 [36mDEBUG[m [DubboServerHandler-192.168.199.177:20891-thread-2][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,808 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20891-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,815 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,815 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,942 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,961 [32mINFO[m [main][TomcatWebServer.java:204] ‚Äê Tomcat started on port(s): 56040 (http) with context path ''
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,962 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,968 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:20,993 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:21,034 [32mINFO[m [main][ServiceConfig.java:643] ‚Äê  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9257&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678015640994&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:21,035 [32mINFO[m [main][ServiceConfig.java:581] ‚Äê  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9257&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678015640994&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:21,035 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:21,036 [32mINFO[m [main][ServiceConfig.java:595] ‚Äê  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9257&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678015640994&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=9257&qos.enable=false&qos.port=22310&registry=nacos&release=2.7.3&timestamp=1678015640993, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:21,060 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Pausing ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,297 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Stopping service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,301 [1;31mERROR[m [http-nio-56040-Acceptor-0][DirectJDKLog.java:175] ‚Äê Socket accept failed
java.nio.channels.AsynchronousCloseException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:205)
	at sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelImpl.java:257)
	at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept(NioEndpoint.java:448)
	at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept(NioEndpoint.java:70)
	at org.apache.tomcat.util.net.Acceptor.run(Acceptor.java:95)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,321 [33mWARN[m [main][DirectJDKLog.java:173] ‚Äê The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1164934558] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2576)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,332 [33mWARN[m [main][DirectJDKLog.java:173] ‚Äê The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1164934558] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Thread.sleep(Native Method)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:2672)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,336 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Stopping ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,349 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Destroying ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,369 [32mINFO[m [main][DubboMetadataServiceExporter.java:107] ‚Äê The Dubbo service[<dubbo:service exported="true" unexported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@da22aa" generic="false" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" group="merchant-service" deprecated="false" register="true" version="1.0.0" dynamic="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been unexported.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,374 [32mINFO[m [main][ConditionEvaluationReportLoggingListener.java:142] ‚Äê 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,380 [32mINFO[m [main][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,393 [32mINFO[m [main][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,405 [32mINFO[m [main][DruidDataSource.java:1885] ‚Äê {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,419 [32mINFO[m [main][DruidDataSource.java:1955] ‚Äê {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,425 [32mINFO[m [main][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,426 [32mINFO[m [main][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" lazy="false" sticky="false" group="merchant-application" generic="true" generic="true" version="1.0.0" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,427 [32mINFO[m [main][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:22,650 [1;31mERROR[m [main][SpringApplication.java:858] ‚Äê Application run failed
org.apache.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9257&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678015640994&version=1.0.0) Failed to bind NettyServer on /192.168.199.177:20891, cause: Address already in use
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:351)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:323)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:306)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:63)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:122)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:61)
	at org.apache.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.lambda$doLocalExport$2(RegistryProtocol.java:245)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at org.apache.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:243)
	at org.apache.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:209)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:61)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:120)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:59)
	at org.apache.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:607)
	at org.apache.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:457)
	at org.apache.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:415)
	at org.apache.dubbo.config.ServiceConfig.export(ServiceConfig.java:378)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter.export(DubboMetadataServiceExporter.java:83)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.getDubboMetadataServiceMetadata(DubboServiceMetadataRepository.java:301)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$FastClassBySpringCGLIB$$4ef4b7bd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$EnhancerBySpringCGLIB$$6f4651c0.getDubboMetadataServiceMetadata(<generated>)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.attachDubboMetadataServiceMetadata(DubboServiceRegistrationAutoConfiguration.java:115)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.attachDubboMetadataServiceMetadata(DubboServiceRegistrationAutoConfiguration.java:109)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.onServiceInstancePreRegistered(DubboServiceRegistrationAutoConfiguration.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:259)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.dubbo.registry.DubboServiceRegistrationEventPublishingAspect.beforeRegister(DubboServiceRegistrationEventPublishingAspect.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.alibaba.cloud.nacos.registry.NacosServiceRegistry$$EnhancerBySpringCGLIB$$d215e874.register(<generated>)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.register(AbstractAutoServiceRegistration.java:219)
	at com.alibaba.cloud.nacos.registry.NacosAutoServiceRegistration.register(NacosAutoServiceRegistration.java:74)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.start(AbstractAutoServiceRegistration.java:118)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.bind(AbstractAutoServiceRegistration.java:82)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.onApplicationEvent(AbstractAutoServiceRegistration.java:69)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.onApplicationEvent(AbstractAutoServiceRegistration.java:32)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:166)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.shanjupay.merchant.MerchantBootstrap.main(MerchantBootstrap.java:15)
Caused by: org.apache.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.199.177:20891, cause: Address already in use
	at org.apache.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:77)
	at org.apache.dubbo.remoting.transport.netty4.NettyServer.<init>(NettyServer.java:79)
	at org.apache.dubbo.remoting.transport.netty4.NettyTransporter.bind(NettyTransporter.java:35)
	at org.apache.dubbo.remoting.Transporter$Adaptive.bind(Transporter$Adaptive.java)
	at org.apache.dubbo.remoting.Transporters.bind(Transporters.java:56)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:44)
	at org.apache.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:70)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:349)
	... 79 more
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1332)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:984)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:495)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:44,613 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:27:50,983 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:28:14,683 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:28:20,835 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x25fe0710, L:/127.0.0.1:59848 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:28:20,855 [36mDEBUG[m [NettyServerWorker-3-1][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:59849, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:28:20,856 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:28:21,001 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:28:44,742 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:28:51,011 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:29:14,788 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:29:20,860 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x25fe0710, L:/127.0.0.1:59848 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:29:20,889 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:29:20,889 [36mDEBUG[m [NettyServerWorker-3-1][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:59849, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:29:21,046 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:29:44,841 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:29:51,071 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:30:14,881 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:30:20,892 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x25fe0710, L:/127.0.0.1:59848 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:30:20,913 [36mDEBUG[m [NettyServerWorker-3-1][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:59849, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:30:20,915 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:30:21,089 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:30:44,936 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:30:51,117 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:31:15,003 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:31:20,919 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x25fe0710, L:/127.0.0.1:59848 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:31:20,945 [36mDEBUG[m [NettyServerWorker-3-1][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:59849, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:31:20,946 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:31:21,138 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:31:45,051 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:31:51,156 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:32:15,101 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:32:20,949 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x25fe0710, L:/127.0.0.1:59848 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:32:20,989 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:32:20,989 [36mDEBUG[m [NettyServerWorker-3-1][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:59849, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:32:21,172 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:32:45,153 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:32:51,190 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:15,204 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:20,993 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x25fe0710, L:/127.0.0.1:59848 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:21,025 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:21,025 [36mDEBUG[m [NettyServerWorker-3-1][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:59849, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:21,214 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:45,234 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:51,229 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56bca85b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:51,984 [32mINFO[m [DubboShutdownHook][DubboShutdownHook.java:58] ‚Äê  [DUBBO] Run shutdown hook now., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:51,986 [32mINFO[m [DubboShutdownHook][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678015639923], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:51,987 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678015639923, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:51,987 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,043 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,044 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,044 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9257&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678015639917&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,046 [32mINFO[m [DubboShutdownHook][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:59848-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,050 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=9257&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,051 [32mINFO[m [DubboShutdownHook][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0x25fe0710, L:/127.0.0.1:59848 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,063 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9257&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,064 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9257&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,064 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:79] ‚Äê  [DUBBO] Unexport service: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9257&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678015640994&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,067 [32mINFO[m [DubboShutdownHook][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,113 [33mWARN[m [NettyServerWorker-3-1][AbstractServer.java:213] ‚Äê  [DUBBO] All clients has disconnected from /192.168.199.177:20891. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:52,118 [36mDEBUG[m [DubboServerHandler-192.168.199.177:20891-thread-3][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /192.168.199.177:59849,url:dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20891&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:56,208 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:56,215 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:56,219 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:56,725 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7777c8fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:56,795 [33mWARN[m [main][AbstractApplicationContext.java:557] ‚Äê Exception encountered during context initialization - cancelling refresh attempt: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'nacosConfigProperties': Could not bind properties to 'NacosConfigProperties' : prefix=spring.cloud.nacos.config, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'spring.cloud.nacos.config.ext-config' to java.util.List<com.alibaba.cloud.nacos.NacosConfigProperties$Config>
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:56,802 [32mINFO[m [main][ConditionEvaluationReportLoggingListener.java:142] ‚Äê 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:56,811 [1;31mERROR[m [main][LoggingFailureAnalysisReporter.java:42] ‚Äê 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target [Bindable@75390459 type = java.util.List<com.alibaba.cloud.nacos.NacosConfigProperties$Config>, value = 'provided', annotations = array<Annotation>[[empty]]] failed:

    Property: spring.cloud.nacos.config.ext-config[0][0].data-id
    Value: spring-boot-http.yaml
    Origin: class path resource [bootstrap.yml]:28:20
    Reason: The elements [spring.cloud.nacos.config.ext-config[0][0].data-id,spring.cloud.nacos.config.ext-config[0][0].group,spring.cloud.nacos.config.ext-config[0][0].refresh,spring.cloud.nacos.config.ext-config[1][0].data-id,spring.cloud.nacos.config.ext-config[1][0].group,spring.cloud.nacos.config.ext-config[1][0].refresh] were left unbound.
    Property: spring.cloud.nacos.config.ext-config[0][0].group
    Value: COMMON_GROUP
    Origin: class path resource [bootstrap.yml]:29:18
    Reason: The elements [spring.cloud.nacos.config.ext-config[0][0].data-id,spring.cloud.nacos.config.ext-config[0][0].group,spring.cloud.nacos.config.ext-config[0][0].refresh,spring.cloud.nacos.config.ext-config[1][0].data-id,spring.cloud.nacos.config.ext-config[1][0].group,spring.cloud.nacos.config.ext-config[1][0].refresh] were left unbound.
    Property: spring.cloud.nacos.config.ext-config[0][0].refresh
    Value: true
    Origin: class path resource [bootstrap.yml]:27:20
    Reason: The elements [spring.cloud.nacos.config.ext-config[0][0].data-id,spring.cloud.nacos.config.ext-config[0][0].group,spring.cloud.nacos.config.ext-config[0][0].refresh,spring.cloud.nacos.config.ext-config[1][0].data-id,spring.cloud.nacos.config.ext-config[1][0].group,spring.cloud.nacos.config.ext-config[1][0].refresh] were left unbound.
    Property: spring.cloud.nacos.config.ext-config[1][0].data-id
    Value: spring-boot-starter-druid.yaml
    Origin: class path resource [bootstrap.yml]:33:22
    Reason: The elements [spring.cloud.nacos.config.ext-config[0][0].data-id,spring.cloud.nacos.config.ext-config[0][0].group,spring.cloud.nacos.config.ext-config[0][0].refresh,spring.cloud.nacos.config.ext-config[1][0].data-id,spring.cloud.nacos.config.ext-config[1][0].group,spring.cloud.nacos.config.ext-config[1][0].refresh] were left unbound.
    Property: spring.cloud.nacos.config.ext-config[1][0].group
    Value: COMMON_GROUP
    Origin: class path resource [bootstrap.yml]:34:20
    Reason: The elements [spring.cloud.nacos.config.ext-config[0][0].data-id,spring.cloud.nacos.config.ext-config[0][0].group,spring.cloud.nacos.config.ext-config[0][0].refresh,spring.cloud.nacos.config.ext-config[1][0].data-id,spring.cloud.nacos.config.ext-config[1][0].group,spring.cloud.nacos.config.ext-config[1][0].refresh] were left unbound.
    Property: spring.cloud.nacos.config.ext-config[1][0].refresh
    Value: true
    Origin: class path resource [bootstrap.yml]:32:22
    Reason: The elements [spring.cloud.nacos.config.ext-config[0][0].data-id,spring.cloud.nacos.config.ext-config[0][0].group,spring.cloud.nacos.config.ext-config[0][0].refresh,spring.cloud.nacos.config.ext-config[1][0].data-id,spring.cloud.nacos.config.ext-config[1][0].group,spring.cloud.nacos.config.ext-config[1][0].refresh] were left unbound.

Action:

Update your application's configuration

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:33:56,813 [1;31mERROR[m [main][SpringApplication.java:858] ‚Äê Application run failed
org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'nacosConfigProperties': Could not bind properties to 'NacosConfigProperties' : prefix=spring.cloud.nacos.config, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'spring.cloud.nacos.config.ext-config' to java.util.List<com.alibaba.cloud.nacos.NacosConfigProperties$Config>
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:110)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:93)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1754)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:191)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:105)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:71)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:347)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.shanjupay.merchant.MerchantBootstrap.main(MerchantBootstrap.java:15)
Caused by: org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'spring.cloud.nacos.config.ext-config' to java.util.List<com.alibaba.cloud.nacos.NacosConfigProperties$Config>
	at org.springframework.boot.context.properties.bind.Binder.handleBindError(Binder.java:249)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:225)
	at org.springframework.boot.context.properties.bind.Binder.lambda$bindBean$3(Binder.java:336)
	at org.springframework.boot.context.properties.bind.JavaBeanBinder.bind(JavaBeanBinder.java:83)
	at org.springframework.boot.context.properties.bind.JavaBeanBinder.bind(JavaBeanBinder.java:72)
	at org.springframework.boot.context.properties.bind.JavaBeanBinder.bind(JavaBeanBinder.java:54)
	at org.springframework.boot.context.properties.bind.Binder.lambda$null$4(Binder.java:344)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.tryAdvance(ArrayList.java:1359)
	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
	at org.springframework.boot.context.properties.bind.Binder.lambda$bindBean$5(Binder.java:345)
	at org.springframework.boot.context.properties.bind.Binder$Context.withIncreasedDepth(Binder.java:448)
	at org.springframework.boot.context.properties.bind.Binder$Context.withBean(Binder.java:434)
	at org.springframework.boot.context.properties.bind.Binder$Context.access$400(Binder.java:388)
	at org.springframework.boot.context.properties.bind.Binder.bindBean(Binder.java:342)
	at org.springframework.boot.context.properties.bind.Binder.bindObject(Binder.java:277)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:220)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:208)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:190)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:83)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:107)
	... 30 more
Caused by: org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException: The elements [spring.cloud.nacos.config.ext-config[0][0].data-id,spring.cloud.nacos.config.ext-config[0][0].group,spring.cloud.nacos.config.ext-config[0][0].refresh,spring.cloud.nacos.config.ext-config[1][0].data-id,spring.cloud.nacos.config.ext-config[1][0].group,spring.cloud.nacos.config.ext-config[1][0].refresh] were left unbound.
	at org.springframework.boot.context.properties.bind.IndexedElementsBinder.assertNoUnboundChildren(IndexedElementsBinder.java:147)
	at org.springframework.boot.context.properties.bind.IndexedElementsBinder.bindIndexed(IndexedElementsBinder.java:120)
	at org.springframework.boot.context.properties.bind.IndexedElementsBinder.bindIndexed(IndexedElementsBinder.java:89)
	at org.springframework.boot.context.properties.bind.IndexedElementsBinder.bindIndexed(IndexedElementsBinder.java:71)
	at org.springframework.boot.context.properties.bind.CollectionBinder.bindAggregate(CollectionBinder.java:51)
	at org.springframework.boot.context.properties.bind.AggregateBinder.bind(AggregateBinder.java:58)
	at org.springframework.boot.context.properties.bind.Binder.lambda$bindAggregate$2(Binder.java:304)
	at org.springframework.boot.context.properties.bind.Binder$Context.withIncreasedDepth(Binder.java:448)
	at org.springframework.boot.context.properties.bind.Binder$Context.access$100(Binder.java:388)
	at org.springframework.boot.context.properties.bind.Binder.bindAggregate(Binder.java:303)
	at org.springframework.boot.context.properties.bind.Binder.bindObject(Binder.java:261)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:220)
	... 55 more
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:15,277 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:45,353 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:48,727 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:48,801 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:48,817 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:49,244 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c5f1c24b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:49,417 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:49,523 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:49,727 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:49,759 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:49,778 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:49,783 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@156199931 {name='merchant-service.yaml', properties={server.servlet.context‚Äêpath=/merchant‚Äêservice}}, NacosPropertySource@878991463 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.stat‚Äêview‚Äêservlet.enabled=true, spring.datasource.druid.max-active=20, spring.datasource.druid.web‚Äêstat‚Äêfilter.session‚Äêstat‚Äêmax‚Äêcount=1000, spring.datasource.druid.min-idle=5, spring.datasource.druid.stat‚Äêview‚Äêservlet.reset‚Äêenable=false, spring.datasource.druid.stat‚Äêview‚Äêservlet.allow=127.0.0.1,192.168.163.1, spring.datasource.druid.min-evictable-idle-time-millis=300000, spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.stat‚Äêview‚Äêservlet.login‚Äêusername=admin, spring.datasource.druid.test-on-return=false, spring.datasource.druid.time-between-eviction-runs-mills=60000, spring.datasource.druid.stat‚Äêview‚Äêservlet.deny=192.168.1.73, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.filter.stat.slow‚Äêsql‚Äêmillis=1, spring.datasource.druid.test-on-borrow=true, spring.datasource.druid.web‚Äêstat‚Äêfilter.session‚Äêstat‚Äêenable=false, spring.datasource.druid.web‚Äêstat‚Äêfilter.principal‚Äêcookie‚Äêname=admin, spring.datasource.druid.validation-query=SELECT 1 FROM DUAL, spring.datasource.druid.web‚Äêstat‚Äêfilter.enabled=true, spring.datasource.druid.test-while-idle=true, spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20, spring.datasource.druid.filter.stat.log‚Äêslow‚Äêsql=true, spring.datasource.password=12345678, spring.datasource.druid.web‚Äêstat‚Äêfilter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.stat‚Äêview‚Äêservlet.login‚Äêpassword=admin, spring.datasource.druid.web‚Äêstat‚Äêfilter.url‚Äêpattern=/*, spring.datasource.username=root, spring.datasource.druid.web‚Äêstat‚Äêfilter.profile‚Äêenable=true, spring.datasource.druid.aop‚Äêpatterns=com.shanjupay.*.service.*, spring.datasource.url=jdbc:mysql://localhost:3306/oauth?useUnicode=true, spring.datasource.druid.initial-size=5, spring.datasource.druid.web‚Äêstat‚Äêfilter.principal‚Äêsession‚Äêname=admin, spring.datasource.druid.pool-prepared-statements=true, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.max-wait=60000, spring.datasource.druid.stat‚Äêview‚Äêservlet.url‚Äêpattern=/druid/*}}, NacosPropertySource@612693043 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:49,836 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,638 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,640 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,666 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:221] ‚Äê Searching for mappers annotated with @Mapper
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,667 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:225] ‚Äê Using auto-configuration base package 'com.shanjupay.merchant'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,671 [36mDEBUG[m [main][LogFactory.java:105] ‚Äê Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,675 [33mWARN[m [main][Logger.java:44] ‚Äê No MyBatis mapper was found in '[com.shanjupay.merchant]' package. Please check your configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,686 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,687 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,687 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,687 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,688 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,688 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,688 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,689 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,689 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,690 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,691 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,691 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,691 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,691 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,691 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,692 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,692 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,692 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,692 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,692 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,692 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,694 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,874 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,949 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,950 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,955 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,958 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:50,959 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,177 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=04e8a3f5-1e03-36db-8c3b-05505b95bcbc
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,222 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,346 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a9d7bf4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,439 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,544 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,553 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$2d990e52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,575 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,601 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,613 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,625 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,632 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,632 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$9fd8aacc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,637 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$3282b324] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,646 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,650 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,655 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$f2c7ecde] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,662 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e692f5a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,675 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$718588d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,685 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,687 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,700 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,706 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,731 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,736 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$bef685ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,749 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,756 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,765 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,770 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,826 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,828 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,877 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,903 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,915 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$f7195182] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,940 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,951 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$30ef4d82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,962 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$56b3edf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,974 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$b7b800f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,984 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$72cee6e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:51,999 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,015 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,034 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$999a5e15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,058 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,068 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e776dc6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,081 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,088 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,120 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,139 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,151 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$c40b8ae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,160 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,166 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,178 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,186 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,189 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,210 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,220 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,222 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,223 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,234 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c5f1c24b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,570 [32mINFO[m [main][TomcatWebServer.java:90] ‚Äê Tomcat initialized with port(s): 56040 (http)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,586 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,596 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,597 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,606 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/hsk/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,714 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:52,714 [32mINFO[m [main][ServletWebServerApplicationContext.java:296] ‚Äê Root WebApplicationContext: initialization completed in 2851 ms
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:53,081 [32mINFO[m [main][DruidDataSourceAutoConfigure.java:56] ‚Äê Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:53,324 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10001,procId-1758} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:53,407 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10002,procId-1759} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:53,517 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10003,procId-1760} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:53,604 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10004,procId-1761} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:53,693 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005,procId-1762} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:53,715 [32mINFO[m [main][DruidDataSource.java:1002] ‚Äê {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,483 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,485 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,488 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,489 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,516 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,517 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,522 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,524 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,524 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,525 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,528 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,529 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,529 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,530 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,530 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,536 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,536 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,536 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,536 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,536 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,638 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,935 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,954 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:263] ‚Äê No org.mybatis.spring.mapper.MapperFactoryBean found.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:54,998 [36mDEBUG[m [main][GlobalConfigUtils.java:106] ‚Äê DeBug: MyBatis Plus Global configuration Initializing !
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,005 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectList
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,006 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectObjs
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,007 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Insert
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,007 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Update
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,007 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Delete
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,008 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Count
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,056 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,062 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,088 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,098 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,114 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,690 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,756 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-application] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,886 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,952 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:55,967 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,013 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,019 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,020 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,029 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,035 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,035 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,035 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,045 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,051 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,052 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,055 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,068 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,081 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,083 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,100 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,100 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,102 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,104 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,104 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,104 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,105 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,106 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,107 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,107 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,107 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,108 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,108 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,108 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,108 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,109 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,109 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,110 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,110 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,111 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,126 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,135 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,160 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,161 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,167 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,167 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,167 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,168 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,168 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,168 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,168 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,168 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,168 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,169 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,169 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,169 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,173 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,173 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,196 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 9590 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,198 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,199 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,201 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,202 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,208 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,229 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,230 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,230 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,292 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,294 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,294 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,294 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,296 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xc6f64291, L:/127.0.0.1:60463 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,296 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,307 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,308 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,311 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@f96168d
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,346 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,382 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,397 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,423 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,425 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,486 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,561 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0, urls: [dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,567 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0, urls: [dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,570 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-application%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D9590%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678016096013%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,710 [36mDEBUG[m [DubboServerHandler-192.168.199.177:20891-thread-5][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,737 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20891-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,746 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:56,747 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:57,120 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:57,130 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:57,135 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:57,159 [32mINFO[m [main][TomcatWebServer.java:204] ‚Äê Tomcat started on port(s): 56040 (http) with context path ''
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:57,199 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:57,246 [32mINFO[m [main][ServiceConfig.java:643] ‚Äê  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9590&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016097204&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:57,248 [32mINFO[m [main][ServiceConfig.java:581] ‚Äê  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9590&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016097204&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:57,249 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:57,249 [32mINFO[m [main][ServiceConfig.java:595] ‚Äê  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9590&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016097204&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=9590&qos.enable=false&qos.port=22310&registry=nacos&release=2.7.3&timestamp=1678016097201, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:57,271 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Pausing ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,492 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Stopping service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,498 [1;31mERROR[m [http-nio-56040-Acceptor-0][DirectJDKLog.java:175] ‚Äê Socket accept failed
java.nio.channels.AsynchronousCloseException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:205)
	at sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelImpl.java:257)
	at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept(NioEndpoint.java:448)
	at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept(NioEndpoint.java:70)
	at org.apache.tomcat.util.net.Acceptor.run(Acceptor.java:95)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,523 [33mWARN[m [main][DirectJDKLog.java:173] ‚Äê The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-709853193] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2576)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,524 [33mWARN[m [main][DirectJDKLog.java:173] ‚Äê The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-709853193] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Thread.sleep(Native Method)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:2672)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,526 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Stopping ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,539 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Destroying ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,556 [32mINFO[m [main][DubboMetadataServiceExporter.java:107] ‚Äê The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@15cee630" exported="true" unexported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" group="merchant-service" deprecated="false" register="true" dynamic="true" version="1.0.0" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been unexported.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,560 [32mINFO[m [main][ConditionEvaluationReportLoggingListener.java:142] ‚Äê 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,565 [32mINFO[m [main][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,571 [32mINFO[m [main][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,587 [32mINFO[m [main][DruidDataSource.java:1885] ‚Äê {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,593 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10001} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,594 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10002} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,594 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10003} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,594 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10004} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,594 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,595 [32mINFO[m [main][DruidDataSource.java:1955] ‚Äê {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,601 [32mINFO[m [main][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,601 [32mINFO[m [main][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" lazy="false" sticky="false" group="merchant-application" generic="true" generic="true" version="1.0.0" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,602 [32mINFO[m [main][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:34:58,614 [1;31mERROR[m [main][SpringApplication.java:858] ‚Äê Application run failed
org.apache.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9590&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016097204&version=1.0.0) Failed to bind NettyServer on /192.168.199.177:20891, cause: Address already in use
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:351)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:323)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:306)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:61)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:63)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:122)
	at org.apache.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.lambda$doLocalExport$2(RegistryProtocol.java:245)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at org.apache.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:243)
	at org.apache.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:209)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:59)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:61)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:120)
	at org.apache.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:607)
	at org.apache.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:457)
	at org.apache.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:415)
	at org.apache.dubbo.config.ServiceConfig.export(ServiceConfig.java:378)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter.export(DubboMetadataServiceExporter.java:83)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.getDubboMetadataServiceMetadata(DubboServiceMetadataRepository.java:301)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$FastClassBySpringCGLIB$$4ef4b7bd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$EnhancerBySpringCGLIB$$9186b682.getDubboMetadataServiceMetadata(<generated>)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.attachDubboMetadataServiceMetadata(DubboServiceRegistrationAutoConfiguration.java:115)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.attachDubboMetadataServiceMetadata(DubboServiceRegistrationAutoConfiguration.java:109)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.onServiceInstancePreRegistered(DubboServiceRegistrationAutoConfiguration.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:259)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.dubbo.registry.DubboServiceRegistrationEventPublishingAspect.beforeRegister(DubboServiceRegistrationEventPublishingAspect.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.alibaba.cloud.nacos.registry.NacosServiceRegistry$$EnhancerBySpringCGLIB$$9944e72d.register(<generated>)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.register(AbstractAutoServiceRegistration.java:219)
	at com.alibaba.cloud.nacos.registry.NacosAutoServiceRegistration.register(NacosAutoServiceRegistration.java:74)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.start(AbstractAutoServiceRegistration.java:118)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.bind(AbstractAutoServiceRegistration.java:82)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.onApplicationEvent(AbstractAutoServiceRegistration.java:69)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.onApplicationEvent(AbstractAutoServiceRegistration.java:32)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:166)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.shanjupay.merchant.MerchantBootstrap.main(MerchantBootstrap.java:15)
Caused by: org.apache.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.199.177:20891, cause: Address already in use
	at org.apache.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:77)
	at org.apache.dubbo.remoting.transport.netty4.NettyServer.<init>(NettyServer.java:79)
	at org.apache.dubbo.remoting.transport.netty4.NettyTransporter.bind(NettyTransporter.java:35)
	at org.apache.dubbo.remoting.Transporter$Adaptive.bind(Transporter$Adaptive.java)
	at org.apache.dubbo.remoting.Transporters.bind(Transporters.java:56)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:44)
	at org.apache.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:70)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:349)
	... 79 more
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1332)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:984)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:495)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:35:15,394 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:35:27,165 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:35:45,435 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:35:56,766 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc6f64291, L:/127.0.0.1:60463 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:35:56,785 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:35:56,784 [36mDEBUG[m [NettyServerWorker-3-2][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:60464, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:35:57,195 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:36:15,459 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:36:27,214 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:36:45,488 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:36:56,788 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc6f64291, L:/127.0.0.1:60463 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:36:56,820 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:36:56,819 [36mDEBUG[m [NettyServerWorker-3-2][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:60464, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:36:57,257 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:37:15,525 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:37:27,274 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:37:45,560 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:37:56,822 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc6f64291, L:/127.0.0.1:60463 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:37:56,844 [36mDEBUG[m [NettyServerWorker-3-2][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:60464, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:37:56,846 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:37:57,290 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:38:15,603 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:38:27,305 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:38:45,638 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:38:56,854 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc6f64291, L:/127.0.0.1:60463 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:38:56,885 [36mDEBUG[m [NettyServerWorker-3-2][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:60464, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:38:56,888 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:38:57,334 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:15,742 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:27,404 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:45,760 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,337 [32mINFO[m [DubboShutdownHook][DubboShutdownHook.java:58] ‚Äê  [DUBBO] Run shutdown hook now., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,344 [32mINFO[m [DubboShutdownHook][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678016096018], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,345 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678016096018, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,346 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,404 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,407 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,407 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9590&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016096013&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,410 [32mINFO[m [DubboShutdownHook][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:60463-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,414 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=9590&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,416 [32mINFO[m [DubboShutdownHook][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0xc6f64291, L:/127.0.0.1:60463 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,432 [33mWARN[m [NettyServerWorker-3-2][AbstractServer.java:213] ‚Äê  [DUBBO] All clients has disconnected from /192.168.199.177:20891. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,436 [36mDEBUG[m [DubboServerHandler-192.168.199.177:20891-thread-6][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /192.168.199.177:60464,url:dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20891&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,435 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9590&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,436 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9590&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,443 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:79] ‚Äê  [DUBBO] Unexport service: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9590&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016097204&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:46,449 [32mINFO[m [DubboShutdownHook][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:51,638 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:51,647 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:51,700 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:52,130 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c5bf7d10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:52,290 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:52,386 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:52,556 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:52,568 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:52,591 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:52,616 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:52,627 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@633131207 {name='merchant-service.yaml', properties={server.servlet.context‚Äêpath=/merchant‚Äêservice}}, NacosPropertySource@852190062 {name='spring-boot-mybatis-plus.yaml', properties={mybatis-plus.global-config.field-strategy=0, mybatis-plus.global-config.db-column-underline=true, mybatis-plus.configuration.cache-enabled=false, mybatis-plus.global-config.refresh-mapper=true, mybatis-plus.mapper-locations=classpath:com/shanjupay/*/mapper/*.xml, mybatis-plus.typeAliasesPackage=com.shanjupay.user.entity, mybatis-plus.configuration.map-underscore-to-camel-case=true, mybatis-plus.global-config.id-type=0}}, NacosPropertySource@1674403916 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.stat‚Äêview‚Äêservlet.enabled=true, spring.datasource.druid.max-active=20, spring.datasource.druid.web‚Äêstat‚Äêfilter.session‚Äêstat‚Äêmax‚Äêcount=1000, spring.datasource.druid.min-idle=5, spring.datasource.druid.stat‚Äêview‚Äêservlet.reset‚Äêenable=false, spring.datasource.druid.stat‚Äêview‚Äêservlet.allow=127.0.0.1,192.168.163.1, spring.datasource.druid.min-evictable-idle-time-millis=300000, spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.stat‚Äêview‚Äêservlet.login‚Äêusername=admin, spring.datasource.druid.test-on-return=false, spring.datasource.druid.time-between-eviction-runs-mills=60000, spring.datasource.druid.stat‚Äêview‚Äêservlet.deny=192.168.1.73, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.filter.stat.slow‚Äêsql‚Äêmillis=1, spring.datasource.druid.test-on-borrow=true, spring.datasource.druid.web‚Äêstat‚Äêfilter.session‚Äêstat‚Äêenable=false, spring.datasource.druid.web‚Äêstat‚Äêfilter.principal‚Äêcookie‚Äêname=admin, spring.datasource.druid.validation-query=SELECT 1 FROM DUAL, spring.datasource.druid.web‚Äêstat‚Äêfilter.enabled=true, spring.datasource.druid.test-while-idle=true, spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20, spring.datasource.druid.filter.stat.log‚Äêslow‚Äêsql=true, spring.datasource.password=12345678, spring.datasource.druid.web‚Äêstat‚Äêfilter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.stat‚Äêview‚Äêservlet.login‚Äêpassword=admin, spring.datasource.druid.web‚Äêstat‚Äêfilter.url‚Äêpattern=/*, spring.datasource.username=root, spring.datasource.druid.web‚Äêstat‚Äêfilter.profile‚Äêenable=true, spring.datasource.druid.aop‚Äêpatterns=com.shanjupay.*.service.*, spring.datasource.url=jdbc:mysql://localhost:3306/oauth?useUnicode=true, spring.datasource.druid.initial-size=5, spring.datasource.druid.web‚Äêstat‚Äêfilter.principal‚Äêsession‚Äêname=admin, spring.datasource.druid.pool-prepared-statements=true, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.max-wait=60000, spring.datasource.druid.stat‚Äêview‚Äêservlet.url‚Äêpattern=/druid/*}}, NacosPropertySource@1088239991 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:52,686 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,882 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,889 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,922 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:221] ‚Äê Searching for mappers annotated with @Mapper
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,923 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:225] ‚Äê Using auto-configuration base package 'com.shanjupay.merchant'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,928 [36mDEBUG[m [main][LogFactory.java:105] ‚Äê Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,933 [33mWARN[m [main][Logger.java:44] ‚Äê No MyBatis mapper was found in '[com.shanjupay.merchant]' package. Please check your configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,944 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,945 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,945 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,945 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,946 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,947 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,947 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,947 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,948 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,949 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,950 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,950 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,950 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,951 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,951 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,951 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,951 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,951 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,952 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,952 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,953 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:53,954 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,210 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,280 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,281 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,284 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,287 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,287 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,520 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=04e8a3f5-1e03-36db-8c3b-05505b95bcbc
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,595 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,741 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a9a57a13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,846 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,963 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,972 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$2d66c917] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:54,992 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,016 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,035 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,047 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,052 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,053 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$9fa66591] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,056 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$32506de9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,062 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,065 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,069 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$f295a7a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,074 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e660b068] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,083 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$71534397] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,090 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,092 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,102 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,106 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,127 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,130 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$bec44071] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,145 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,152 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,213 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,223 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,318 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,322 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,447 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,508 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,537 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$f6e70c47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,575 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,584 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$30bd0847] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,595 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$538f9a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,614 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$b785bbbd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,629 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$729ca1ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,640 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,656 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,681 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$996818da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,737 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,749 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e7449733] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,767 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,776 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,813 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,845 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,861 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$c3d945a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,875 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,881 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,890 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,898 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,901 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,925 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,938 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,943 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,946 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:55,968 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c5bf7d10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:56,355 [32mINFO[m [main][TomcatWebServer.java:90] ‚Äê Tomcat initialized with port(s): 56040 (http)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:56,379 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:56,390 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:56,391 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:56,404 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/hsk/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:56,545 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:56,546 [32mINFO[m [main][ServletWebServerApplicationContext.java:296] ‚Äê Root WebApplicationContext: initialization completed in 3824 ms
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:56,922 [32mINFO[m [main][DruidDataSourceAutoConfigure.java:56] ‚Äê Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:57,233 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10001,procId-1763} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:57,323 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10002,procId-1764} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:57,385 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10003,procId-1765} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:57,461 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10004,procId-1766} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:57,519 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005,procId-1767} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:57,552 [32mINFO[m [main][DruidDataSource.java:1002] ‚Äê {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,231 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,234 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,237 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,237 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,268 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,270 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,277 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,279 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,280 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,281 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,283 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,283 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,285 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,286 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,287 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,294 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,295 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,295 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,295 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,295 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,402 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,683 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,699 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:263] ‚Äê No org.mybatis.spring.mapper.MapperFactoryBean found.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,742 [36mDEBUG[m [main][GlobalConfigUtils.java:106] ‚Äê DeBug: MyBatis Plus Global configuration Initializing !
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,748 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectList
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,748 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectObjs
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,749 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Insert
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,749 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Update
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,750 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Delete
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,750 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Count
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,774 [36mDEBUG[m [main][VFS.java:77] ‚Äê Using VFS adapter com.baomidou.mybatisplus.autoconfigure.SpringBootVFS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,783 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,786 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,807 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,814 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:58,831 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,347 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,412 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-application] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,522 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,584 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,597 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,644 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,651 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,653 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,666 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,674 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,674 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,674 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,683 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,689 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,689 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,692 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,704 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,717 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,719 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,733 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,734 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,736 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,738 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,740 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,741 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,743 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,743 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,744 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,744 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,744 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,744 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,745 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,745 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,745 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,746 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,748 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,750 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,750 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,751 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,763 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,772 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,792 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,792 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,800 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,801 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,801 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,801 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,802 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,802 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,803 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,803 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,803 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,804 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,804 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,805 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,810 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,811 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,843 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 9885 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,847 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,848 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,850 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,851 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,855 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,877 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,877 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,877 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,942 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,944 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,945 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,945 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,947 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x4033c004, L:/127.0.0.1:60936 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,950 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,963 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,964 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:39:59,970 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@52167a0a
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,003 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,030 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,053 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,085 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,089 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,114 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,128 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0, urls: [dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,141 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0, urls: [dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,151 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-application%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D9885%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678016399644%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,240 [36mDEBUG[m [DubboServerHandler-192.168.199.177:20891-thread-8][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,278 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20891-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,280 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,281 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,647 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,659 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,659 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,678 [32mINFO[m [main][TomcatWebServer.java:204] ‚Äê Tomcat started on port(s): 56040 (http) with context path ''
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,709 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,764 [32mINFO[m [main][ServiceConfig.java:643] ‚Äê  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9885&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016400711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,765 [32mINFO[m [main][ServiceConfig.java:581] ‚Äê  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9885&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016400711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,765 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,766 [32mINFO[m [main][ServiceConfig.java:595] ‚Äê  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9885&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016400711&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=9885&qos.enable=false&qos.port=22310&registry=nacos&release=2.7.3&timestamp=1678016400709, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:00,782 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Pausing ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,018 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Stopping service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,024 [1;31mERROR[m [http-nio-56040-Acceptor-0][DirectJDKLog.java:175] ‚Äê Socket accept failed
java.nio.channels.AsynchronousCloseException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:205)
	at sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelImpl.java:257)
	at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept(NioEndpoint.java:448)
	at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept(NioEndpoint.java:70)
	at org.apache.tomcat.util.net.Acceptor.run(Acceptor.java:95)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,057 [33mWARN[m [main][DirectJDKLog.java:173] ‚Äê The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1689129053] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2576)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,060 [33mWARN[m [main][DirectJDKLog.java:173] ‚Äê The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1689129053] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Thread.sleep(Native Method)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:2672)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,064 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Stopping ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,078 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Destroying ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,092 [32mINFO[m [main][DubboMetadataServiceExporter.java:107] ‚Äê The Dubbo service[<dubbo:service exported="true" unexported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@69ba72da" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" group="merchant-service" deprecated="false" register="true" dynamic="true" version="1.0.0" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been unexported.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,095 [32mINFO[m [main][ConditionEvaluationReportLoggingListener.java:142] ‚Äê 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,100 [32mINFO[m [main][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,107 [32mINFO[m [main][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,112 [32mINFO[m [main][DruidDataSource.java:1885] ‚Äê {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,117 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10001} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,118 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10002} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,119 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10003} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,119 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10004} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,119 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,120 [32mINFO[m [main][DruidDataSource.java:1955] ‚Äê {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,124 [32mINFO[m [main][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,126 [32mINFO[m [main][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" group="merchant-application" lazy="false" sticky="false" generic="true" generic="true" version="1.0.0" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,127 [32mINFO[m [main][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:02,139 [1;31mERROR[m [main][SpringApplication.java:858] ‚Äê Application run failed
org.apache.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9885&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016400711&version=1.0.0) Failed to bind NettyServer on /192.168.199.177:20891, cause: Address already in use
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:351)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:323)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:306)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:63)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:122)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:61)
	at org.apache.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.lambda$doLocalExport$2(RegistryProtocol.java:245)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at org.apache.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:243)
	at org.apache.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:209)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:61)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:120)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:59)
	at org.apache.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:607)
	at org.apache.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:457)
	at org.apache.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:415)
	at org.apache.dubbo.config.ServiceConfig.export(ServiceConfig.java:378)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter.export(DubboMetadataServiceExporter.java:83)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.getDubboMetadataServiceMetadata(DubboServiceMetadataRepository.java:301)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$FastClassBySpringCGLIB$$4ef4b7bd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$EnhancerBySpringCGLIB$$37fd4af5.getDubboMetadataServiceMetadata(<generated>)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.attachDubboMetadataServiceMetadata(DubboServiceRegistrationAutoConfiguration.java:115)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.attachDubboMetadataServiceMetadata(DubboServiceRegistrationAutoConfiguration.java:109)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.onServiceInstancePreRegistered(DubboServiceRegistrationAutoConfiguration.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:259)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.dubbo.registry.DubboServiceRegistrationEventPublishingAspect.beforeRegister(DubboServiceRegistrationEventPublishingAspect.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.alibaba.cloud.nacos.registry.NacosServiceRegistry$$EnhancerBySpringCGLIB$$1a821f01.register(<generated>)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.register(AbstractAutoServiceRegistration.java:219)
	at com.alibaba.cloud.nacos.registry.NacosAutoServiceRegistration.register(NacosAutoServiceRegistration.java:74)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.start(AbstractAutoServiceRegistration.java:118)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.bind(AbstractAutoServiceRegistration.java:82)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.onApplicationEvent(AbstractAutoServiceRegistration.java:69)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.onApplicationEvent(AbstractAutoServiceRegistration.java:32)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:166)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.shanjupay.merchant.MerchantBootstrap.main(MerchantBootstrap.java:15)
Caused by: org.apache.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.199.177:20891, cause: Address already in use
	at org.apache.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:77)
	at org.apache.dubbo.remoting.transport.netty4.NettyServer.<init>(NettyServer.java:79)
	at org.apache.dubbo.remoting.transport.netty4.NettyTransporter.bind(NettyTransporter.java:35)
	at org.apache.dubbo.remoting.Transporter$Adaptive.bind(Transporter$Adaptive.java)
	at org.apache.dubbo.remoting.Transporters.bind(Transporters.java:56)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:44)
	at org.apache.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:70)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:349)
	... 79 more
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1332)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:984)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:495)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:15,811 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:30,686 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27953a83 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:40:45,866 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:41:00,305 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x4033c004, L:/127.0.0.1:60936 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:41:00,327 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:41:00,328 [36mDEBUG[m [NettyServerWorker-3-3][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:60939, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:41:00,713 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27953a83 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:41:15,895 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:41:30,735 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27953a83 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:41:45,926 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:42:00,330 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x4033c004, L:/127.0.0.1:60936 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:42:00,345 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:42:00,345 [36mDEBUG[m [NettyServerWorker-3-3][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:60939, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:42:00,776 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27953a83 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:42:15,961 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:42:30,793 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27953a83 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:42:45,986 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:00,347 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x4033c004, L:/127.0.0.1:60936 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:00,353 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:00,353 [36mDEBUG[m [NettyServerWorker-3-3][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:60939, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:00,813 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27953a83 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:16,036 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:30,837 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27953a83 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:46,099 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,667 [32mINFO[m [DubboShutdownHook][DubboShutdownHook.java:58] ‚Äê  [DUBBO] Run shutdown hook now., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,685 [32mINFO[m [DubboShutdownHook][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678016399650], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,687 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678016399650, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,689 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,770 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,772 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,773 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=9885&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016399644&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,780 [32mINFO[m [DubboShutdownHook][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:60936-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,786 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9885&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,787 [32mINFO[m [DubboShutdownHook][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0x4033c004, L:/127.0.0.1:60936 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,810 [33mWARN[m [NettyServerWorker-3-3][AbstractServer.java:213] ‚Äê  [DUBBO] All clients has disconnected from /192.168.199.177:20891. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,811 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=9885&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,809 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9885&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,816 [36mDEBUG[m [DubboServerHandler-192.168.199.177:20891-thread-9][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /192.168.199.177:60939,url:dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20891&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,817 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:79] ‚Äê  [DUBBO] Unexport service: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=9885&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016400711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:43:57,821 [32mINFO[m [DubboShutdownHook][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:04,537 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:04,594 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:04,606 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:05,064 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$99c50564] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:05,189 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:05,253 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:05,472 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:05,490 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:05,515 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:05,536 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:05,543 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@156199931 {name='merchant-service.yaml', properties={server.servlet.context‚Äêpath=/merchant‚Äêservice}}, NacosPropertySource@878991463 {name='spring-boot-mybatis-plus.yaml', properties={mybatis-plus.global-config.field-strategy=0, mybatis-plus.global-config.db-column-underline=true, mybatis-plus.configuration.cache-enabled=false, mybatis-plus.global-config.refresh-mapper=true, mybatis-plus.mapper-locations=classpath:com/shanjupay/*/mapper/*.xml, mybatis-plus.typeAliasesPackage=com.shanjupay.user.entity, mybatis-plus.configuration.map-underscore-to-camel-case=true, mybatis-plus.global-config.id-type=0}}, NacosPropertySource@612693043 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.stat‚Äêview‚Äêservlet.enabled=true, spring.datasource.druid.max-active=20, spring.datasource.druid.web‚Äêstat‚Äêfilter.session‚Äêstat‚Äêmax‚Äêcount=1000, spring.datasource.druid.min-idle=5, spring.datasource.druid.stat‚Äêview‚Äêservlet.reset‚Äêenable=false, spring.datasource.druid.stat‚Äêview‚Äêservlet.allow=127.0.0.1,192.168.163.1, spring.datasource.druid.min-evictable-idle-time-millis=300000, spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.stat‚Äêview‚Äêservlet.login‚Äêusername=admin, spring.datasource.druid.test-on-return=false, spring.datasource.druid.time-between-eviction-runs-mills=60000, spring.datasource.druid.stat‚Äêview‚Äêservlet.deny=192.168.1.73, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.filter.stat.slow‚Äêsql‚Äêmillis=1, spring.datasource.druid.test-on-borrow=true, spring.datasource.druid.web‚Äêstat‚Äêfilter.session‚Äêstat‚Äêenable=false, spring.datasource.druid.web‚Äêstat‚Äêfilter.principal‚Äêcookie‚Äêname=admin, spring.datasource.druid.validation-query=SELECT 1 FROM DUAL, spring.datasource.druid.web‚Äêstat‚Äêfilter.enabled=true, spring.datasource.druid.test-while-idle=true, spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20, spring.datasource.druid.filter.stat.log‚Äêslow‚Äêsql=true, spring.datasource.password=12345678, spring.datasource.druid.web‚Äêstat‚Äêfilter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.stat‚Äêview‚Äêservlet.login‚Äêpassword=admin, spring.datasource.druid.web‚Äêstat‚Äêfilter.url‚Äêpattern=/*, spring.datasource.username=root, spring.datasource.druid.web‚Äêstat‚Äêfilter.profile‚Äêenable=true, spring.datasource.druid.aop‚Äêpatterns=com.shanjupay.*.service.*, spring.datasource.url=jdbc:mysql://localhost:3306/oauth?useUnicode=true, spring.datasource.druid.initial-size=5, spring.datasource.druid.web‚Äêstat‚Äêfilter.principal‚Äêsession‚Äêname=admin, spring.datasource.druid.pool-prepared-statements=true, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.max-wait=60000, spring.datasource.druid.stat‚Äêview‚Äêservlet.url‚Äêpattern=/druid/*}}, NacosPropertySource@1622613647 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:05,594 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,241 [36mDEBUG[m [main][LogFactory.java:105] ‚Äê Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,247 [33mWARN[m [main][Logger.java:44] ‚Äê No MyBatis mapper was found in '[com.shanjupay.**.mapper]' package. Please check your configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,408 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,413 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,455 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:221] ‚Äê Searching for mappers annotated with @Mapper
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,458 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:225] ‚Äê Using auto-configuration base package 'com.shanjupay.merchant'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,464 [33mWARN[m [main][Logger.java:44] ‚Äê No MyBatis mapper was found in '[com.shanjupay.merchant]' package. Please check your configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,477 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,478 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,478 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,479 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,479 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,479 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,479 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,479 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,480 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,482 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,484 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,485 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,485 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,485 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,485 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,485 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,486 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,486 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,486 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,486 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,486 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,487 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,721 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,789 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,789 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,795 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,800 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:06,801 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,038 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=3b4ab0ac-7d7e-350f-ad56-4669c95b8986
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,117 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,246 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7dab0267] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,436 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,447 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,451 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$16c516b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,473 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,500 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,515 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,529 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,535 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,536 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$73abede5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,541 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$655f63d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,551 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,555 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,561 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c69b2ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,569 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$ba6638bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,580 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$4558cbeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,589 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,591 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,601 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,607 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,625 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,628 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$92c9c8c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,639 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,643 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,648 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,652 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,728 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,731 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,811 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,840 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,848 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$caec949b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,865 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,870 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$4c2909b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,876 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$d93e81f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,885 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$8b8b4411] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,891 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$46a22a00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,896 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,904 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,921 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$6d6da12e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,946 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,959 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$bb4a1f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,976 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:07,985 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,022 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,041 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,052 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$97decdfb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,061 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,065 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,072 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,077 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,078 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,096 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,105 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,107 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,108 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,118 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$99c50564] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,410 [32mINFO[m [main][TomcatWebServer.java:90] ‚Äê Tomcat initialized with port(s): 56040 (http)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,426 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,445 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,445 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,453 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/hsk/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,559 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,559 [32mINFO[m [main][ServletWebServerApplicationContext.java:296] ‚Äê Root WebApplicationContext: initialization completed in 2950 ms
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:08,915 [32mINFO[m [main][DruidDataSourceAutoConfigure.java:56] ‚Äê Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:09,190 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10001,procId-1769} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:09,259 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10002,procId-1770} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:09,318 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10003,procId-1771} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:09,410 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10004,procId-1772} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:09,470 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005,procId-1773} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:09,489 [32mINFO[m [main][DruidDataSource.java:1002] ‚Äê {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,211 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,214 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,216 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,216 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,246 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,248 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,254 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,256 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,257 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,257 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,258 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,259 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,259 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,259 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,259 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,265 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,265 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,265 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,265 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,266 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,366 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,667 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,686 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:263] ‚Äê No org.mybatis.spring.mapper.MapperFactoryBean found.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,725 [36mDEBUG[m [main][GlobalConfigUtils.java:106] ‚Äê DeBug: MyBatis Plus Global configuration Initializing !
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,731 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectList
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,732 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectObjs
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,733 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Insert
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,733 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Update
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,733 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Delete
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,734 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Count
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,762 [36mDEBUG[m [main][VFS.java:77] ‚Äê Using VFS adapter com.baomidou.mybatisplus.autoconfigure.SpringBootVFS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,773 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,777 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,797 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,805 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:10,826 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,375 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,454 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-application] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,587 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,670 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,683 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,725 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,731 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,733 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,743 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,750 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,751 [33mWARN[m [main][SpringExtensionFactory.java:86] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,751 [33mWARN[m [main][SpringExtensionFactory.java:104] ‚Äê  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,762 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,769 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,769 [36mDEBUG[m [main][AbstractSpringCloudRegistry.java:116] ‚Äê The URL[consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,773 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,787 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,803 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,806 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,830 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,831 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,835 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,838 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,839 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,840 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,843 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,844 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,846 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,848 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,848 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,849 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,849 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,850 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,853 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,857 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,861 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,873 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,874 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,876 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,895 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,912 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,943 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,944 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,948 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,949 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,949 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,949 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,949 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,949 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,950 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,950 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,950 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,950 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,950 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,950 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,954 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,954 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,972 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 10069 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,973 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,974 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,975 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,975 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,978 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,994 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,994 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:11,994 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,066 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:96] ‚Äê -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,067 [32mINFO[m [main][AbstractClient.java:199] ‚Äê  [DUBBO] Succeed connect to server /127.0.0.1:7890 from NettyClient 192.168.199.177 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x5a326029, L:/127.0.0.1:61454 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,068 [32mINFO[m [main][AbstractClient.java:71] ‚Äê  [DUBBO] Start NettyClient jim.lan/192.168.199.177 connect to the server /127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,070 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:97] ‚Äê -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,071 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:98] ‚Äê -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,071 [36mDEBUG[m [NettyClientWorker-1-1][Recycler.java:99] ‚Äê -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,095 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:61] ‚Äê -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,097 [36mDEBUG[m [NettyClientWorker-1-1][AbstractByteBuf.java:62] ‚Äê -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,101 [36mDEBUG[m [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] ‚Äê Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2cfdfcc1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,144 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,171 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,185 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,210 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,212 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,239 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,249 [32mINFO[m [main][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, urls: [dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,255 [32mINFO[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] ‚Äê  [DUBBO] Notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, urls: [dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,259 [32mINFO[m [main][ReferenceConfig.java:421] ‚Äê  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-application%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D10069%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.199.177%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1678016651725%26version%3D1.0.0&register.ip=192.168.199.177&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,379 [36mDEBUG[m [DubboServerHandler-192.168.199.177:20891-thread-11][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,914 [36mDEBUG[m [DubboClientHandler-192.168.199.177:20891-thread-1][DecodeHandler.java:59] ‚Äê  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,950 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:12,952 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:13,188 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:13,203 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:13,209 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:13,232 [32mINFO[m [main][TomcatWebServer.java:204] ‚Äê Tomcat started on port(s): 56040 (http) with context path ''
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:13,265 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:13,312 [32mINFO[m [main][ServiceConfig.java:643] ‚Äê  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10069&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016653266&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:13,313 [32mINFO[m [main][ServiceConfig.java:581] ‚Äê  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10069&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016653266&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:13,313 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:13,314 [32mINFO[m [main][ServiceConfig.java:595] ‚Äê  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10069&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016653266&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=10069&qos.enable=false&qos.port=22310&registry=nacos&release=2.7.3&timestamp=1678016653265, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:13,333 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Pausing ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,604 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Stopping service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,617 [1;31mERROR[m [http-nio-56040-Acceptor-0][DirectJDKLog.java:175] ‚Äê Socket accept failed
java.nio.channels.AsynchronousCloseException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:205)
	at sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelImpl.java:257)
	at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept(NioEndpoint.java:448)
	at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept(NioEndpoint.java:70)
	at org.apache.tomcat.util.net.Acceptor.run(Acceptor.java:95)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,642 [33mWARN[m [main][DirectJDKLog.java:173] ‚Äê The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-1126454617] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2576)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,644 [33mWARN[m [main][DirectJDKLog.java:173] ‚Äê The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-1126454617] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Thread.sleep(Native Method)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:2672)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,646 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Stopping ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,656 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Destroying ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,671 [32mINFO[m [main][DubboMetadataServiceExporter.java:107] ‚Äê The Dubbo service[<dubbo:service exported="true" unexported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@571d0925" generic="false" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" group="merchant-service" deprecated="false" register="true" version="1.0.0" dynamic="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been unexported.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,674 [32mINFO[m [main][ConditionEvaluationReportLoggingListener.java:142] ‚Äê 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,680 [32mINFO[m [main][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,686 [32mINFO[m [main][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,692 [32mINFO[m [main][DruidDataSource.java:1885] ‚Äê {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,699 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10001} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,700 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10002} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,702 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10003} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,702 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10004} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,702 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,704 [32mINFO[m [main][DruidDataSource.java:1955] ‚Äê {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,710 [32mINFO[m [main][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,711 [32mINFO[m [main][DubboGenericServiceFactory.java:164] ‚Äê Destroyed the ReferenceBean  : <dubbo:reference singleton="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" group="merchant-application" lazy="false" sticky="false" generic="true" version="1.0.0" generic="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,713 [32mINFO[m [main][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:14,725 [1;31mERROR[m [main][SpringApplication.java:858] ‚Äê Application run failed
org.apache.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10069&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016653266&version=1.0.0) Failed to bind NettyServer on /192.168.199.177:20891, cause: Address already in use
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:351)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:323)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:306)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:61)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:63)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:122)
	at org.apache.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.lambda$doLocalExport$2(RegistryProtocol.java:245)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at org.apache.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:243)
	at org.apache.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:209)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:59)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:61)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:120)
	at org.apache.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:607)
	at org.apache.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:457)
	at org.apache.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:415)
	at org.apache.dubbo.config.ServiceConfig.export(ServiceConfig.java:378)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter.export(DubboMetadataServiceExporter.java:83)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.getDubboMetadataServiceMetadata(DubboServiceMetadataRepository.java:301)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$FastClassBySpringCGLIB$$4ef4b7bd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$EnhancerBySpringCGLIB$$ec201fcf.getDubboMetadataServiceMetadata(<generated>)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.attachDubboMetadataServiceMetadata(DubboServiceRegistrationAutoConfiguration.java:115)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.attachDubboMetadataServiceMetadata(DubboServiceRegistrationAutoConfiguration.java:109)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration.onServiceInstancePreRegistered(DubboServiceRegistrationAutoConfiguration.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:259)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.dubbo.registry.DubboServiceRegistrationEventPublishingAspect.beforeRegister(DubboServiceRegistrationEventPublishingAspect.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.alibaba.cloud.nacos.registry.NacosServiceRegistry$$EnhancerBySpringCGLIB$$50af01b8.register(<generated>)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.register(AbstractAutoServiceRegistration.java:219)
	at com.alibaba.cloud.nacos.registry.NacosAutoServiceRegistration.register(NacosAutoServiceRegistration.java:74)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.start(AbstractAutoServiceRegistration.java:118)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.bind(AbstractAutoServiceRegistration.java:82)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.onApplicationEvent(AbstractAutoServiceRegistration.java:69)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.onApplicationEvent(AbstractAutoServiceRegistration.java:32)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:166)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.shanjupay.merchant.MerchantBootstrap.main(MerchantBootstrap.java:15)
Caused by: org.apache.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.199.177:20891, cause: Address already in use
	at org.apache.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:77)
	at org.apache.dubbo.remoting.transport.netty4.NettyServer.<init>(NettyServer.java:79)
	at org.apache.dubbo.remoting.transport.netty4.NettyTransporter.bind(NettyTransporter.java:35)
	at org.apache.dubbo.remoting.Transporter$Adaptive.bind(Transporter$Adaptive.java)
	at org.apache.dubbo.remoting.Transporters.bind(Transporters.java:56)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:44)
	at org.apache.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:70)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:349)
	... 79 more
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1332)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:984)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:495)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:16,163 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:43,228 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ef3efa8 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:44:46,220 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:45:12,942 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x5a326029, L:/127.0.0.1:61454 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:45:12,951 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:45:12,950 [36mDEBUG[m [NettyServerWorker-3-4][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:61457, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:45:13,258 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ef3efa8 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:45:16,254 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:45:43,279 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ef3efa8 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:45:46,331 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:46:12,954 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x5a326029, L:/127.0.0.1:61454 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:46:12,984 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:46:12,984 [36mDEBUG[m [NettyServerWorker-3-4][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:61457, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:46:13,307 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ef3efa8 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:46:16,367 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:46:43,318 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ef3efa8 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:46:46,446 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:12,987 [36mDEBUG[m [NettyClientWorker-1-1][NettyClientHandler.java:121] ‚Äê  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x5a326029, L:/127.0.0.1:61454 - R:/127.0.0.1:7890]], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:13,028 [36mDEBUG[m [NettyClientWorker-1-1][HeartbeatHandler.java:84] ‚Äê  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:13,027 [36mDEBUG[m [NettyServerWorker-3-4][HeartbeatHandler.java:74] ‚Äê  [DUBBO] Received heartbeat from remote channel /192.168.199.177:61457, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:13,338 [1;31mERROR[m [ThreadPoolTaskScheduler-1][TaskUtils.java:96] ‚Äê Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ef3efa8 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:16,523 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:35,919 [32mINFO[m [DubboShutdownHook][DubboShutdownHook.java:58] ‚Äê  [DUBBO] Run shutdown hook now., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:35,927 [32mINFO[m [DubboShutdownHook][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=5910&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678010226317], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:35,931 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=5910&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678010226317, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:35,935 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,012 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,015 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: provider://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,016 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url provider://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,019 [32mINFO[m [DubboShutdownHook][DubboProtocol.java:616] ‚Äê  [DUBBO] Close dubbo server: /192.168.199.177:20891, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,030 [32mINFO[m [Thread-33][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,046 [32mINFO[m [Thread-33][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: provider://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,057 [32mINFO[m [Exporter-Unexport-thread-1][RegistryProtocol.java:689] ‚Äê  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,060 [32mINFO[m [Thread-33][DubboMetadataServiceExporter.java:107] ‚Äê The Dubbo service[<dubbo:service exported="true" unexported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@3271ec2a" group="merchant-application" deprecated="false" register="true" dynamic="true" version="1.0.0" valid="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" />] has been unexported.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,062 [32mINFO[m [Thread-33][AwaitingNonWebApplicationListener.java:155] ‚Äê  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,097 [32mINFO[m [Thread-33][NacosServiceRegistry.java:74] ‚Äê De-registering from Nacos Server now...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,109 [32mINFO[m [Thread-33][NacosServiceRegistry.java:93] ‚Äê De-registration finished.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,113 [32mINFO[m [Thread-33][ExecutorConfigurationSupport.java:208] ‚Äê Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,154 [32mINFO[m [Thread-33][DubboGenericServiceFactory.java:159] ‚Äê The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:36,159 [32mINFO[m [Thread-33][AnnotationInjectedBeanPostProcessor.java:305] ‚Äê class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:37,055 [33mWARN[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] ‚Äê  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:37,058 [33mWARN[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] ‚Äê  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:37,117 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-application , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,489 [32mINFO[m [DubboShutdownHook][DubboShutdownHook.java:58] ‚Äê  [DUBBO] Run shutdown hook now., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,490 [32mINFO[m [DubboShutdownHook][AbstractRegistryFactory.java:68] ‚Äê  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678016651730], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,491 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:458] ‚Äê  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1678016651730, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,491 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:291] ‚Äê  [DUBBO] Unregister: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,515 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:467] ‚Äê  [DUBBO] Destroy unregister url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,516 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:320] ‚Äê  [DUBBO] Unsubscribe: consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,516 [32mINFO[m [DubboShutdownHook][AbstractRegistry.java:483] ‚Äê  [DUBBO] Destroy unsubscribe url consumer://192.168.199.177/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=10069&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1678016651725&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,517 [32mINFO[m [DubboShutdownHook][DubboProtocol.java:654] ‚Äê  [DUBBO] Close dubbo connect: /127.0.0.1:61454-->/127.0.0.1:7890, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,520 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=10069&protocol=dubbo&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,522 [32mINFO[m [DubboShutdownHook][NettyChannel.java:172] ‚Äê  [DUBBO] Close netty channel [id: 0x5a326029, L:/127.0.0.1:61454 - R:/127.0.0.1:7890], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,527 [36mDEBUG[m [DubboSharedHandler-thread-1][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /127.0.0.1:7890,url:dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10069&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,528 [33mWARN[m [NettyServerWorker-3-4][AbstractServer.java:213] ‚Äê  [DUBBO] All clients has disconnected from /192.168.199.177:20891. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,531 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:66] ‚Äê  [DUBBO] Destroy reference: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10069&qos.enable=false&qos.port=22310&register=true&register.ip=192.168.199.177&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,533 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:79] ‚Äê  [DUBBO] Unexport service: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10069&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016653266&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,534 [36mDEBUG[m [DubboServerHandler-192.168.199.177:20891-thread-12][DubboProtocol.java:174] ‚Äê  [DUBBO] disconnected from /192.168.199.177:61457,url:dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20891&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,538 [32mINFO[m [DubboShutdownHook][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,544 [32mINFO[m [DubboShutdownHook][AbstractServer.java:153] ‚Äê  [DUBBO] Close NettyServer bind /0.0.0.0:20891, export /192.168.199.177:20891, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,556 [32mINFO[m [DubboShutdownHook][AbstractProtocol.java:79] ‚Äê  [DUBBO] Unexport service: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=5910&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,558 [36mDEBUG[m [NettyServerWorker-3-3][PoolThreadCache.java:250] ‚Äê Freed 4 thread-local buffer(s) from thread: NettyServerWorker-3-3
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,558 [36mDEBUG[m [NettyServerWorker-3-2][PoolThreadCache.java:250] ‚Äê Freed 4 thread-local buffer(s) from thread: NettyServerWorker-3-2
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,558 [36mDEBUG[m [NettyServerWorker-3-1][PoolThreadCache.java:250] ‚Äê Freed 5 thread-local buffer(s) from thread: NettyServerWorker-3-1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:38,567 [32mINFO[m [DubboShutdownHook][Server.java:112] ‚Äê  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:43,087 [32mINFO[m [main][:] ‚Äê using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:43,096 [32mINFO[m [main][WelcomeLogoApplicationListener.java:63] ‚Äê 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:43,101 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:43,576 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$67921bf9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:43,710 [32mINFO[m [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] ‚Äê  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:43,807 [32mINFO[m [main][OverrideDubboConfigApplicationListener.java:68] ‚Äê Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:43,996 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,013 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,035 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,059 [32mINFO[m [main][NacosPropertySourceBuilder.java:87] ‚Äê Loading nacos data, dataId: 'merchant-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,064 [32mINFO[m [main][PropertySourceBootstrapConfiguration.java:98] ‚Äê Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1605988985 {name='merchant-service.yaml', properties={server.servlet.context‚Äêpath=/merchant‚Äêservice}}, NacosPropertySource@1134202713 {name='spring-boot-mybatis-plus.yaml', properties={mybatis-plus.global-config.field-strategy=0, mybatis-plus.global-config.db-column-underline=true, mybatis-plus.configuration.cache-enabled=false, mybatis-plus.global-config.refresh-mapper=true, mybatis-plus.mapper-locations=classpath:com/shanjupay/*/mapper/*.xml, mybatis-plus.typeAliasesPackage=com.shanjupay.user.entity, mybatis-plus.configuration.map-underscore-to-camel-case=true, mybatis-plus.global-config.id-type=0}}, NacosPropertySource@1636178473 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.stat‚Äêview‚Äêservlet.enabled=true, spring.datasource.druid.max-active=20, spring.datasource.druid.web‚Äêstat‚Äêfilter.session‚Äêstat‚Äêmax‚Äêcount=1000, spring.datasource.druid.min-idle=5, spring.datasource.druid.stat‚Äêview‚Äêservlet.reset‚Äêenable=false, spring.datasource.druid.stat‚Äêview‚Äêservlet.allow=127.0.0.1,192.168.163.1, spring.datasource.druid.min-evictable-idle-time-millis=300000, spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.stat‚Äêview‚Äêservlet.login‚Äêusername=admin, spring.datasource.druid.test-on-return=false, spring.datasource.druid.time-between-eviction-runs-mills=60000, spring.datasource.druid.stat‚Äêview‚Äêservlet.deny=192.168.1.73, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.filter.stat.slow‚Äêsql‚Äêmillis=1, spring.datasource.druid.test-on-borrow=true, spring.datasource.druid.web‚Äêstat‚Äêfilter.session‚Äêstat‚Äêenable=false, spring.datasource.druid.web‚Äêstat‚Äêfilter.principal‚Äêcookie‚Äêname=admin, spring.datasource.druid.validation-query=SELECT 1 FROM DUAL, spring.datasource.druid.web‚Äêstat‚Äêfilter.enabled=true, spring.datasource.druid.test-while-idle=true, spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20, spring.datasource.druid.filter.stat.log‚Äêslow‚Äêsql=true, spring.datasource.password=12345678, spring.datasource.druid.web‚Äêstat‚Äêfilter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.stat‚Äêview‚Äêservlet.login‚Äêpassword=admin, spring.datasource.druid.web‚Äêstat‚Äêfilter.url‚Äêpattern=/*, spring.datasource.username=root, spring.datasource.druid.web‚Äêstat‚Äêfilter.profile‚Äêenable=true, spring.datasource.druid.aop‚Äêpatterns=com.shanjupay.*.service.*, spring.datasource.url=jdbc:mysql://localhost:3306/oauth?useUnicode=true, spring.datasource.druid.initial-size=5, spring.datasource.druid.web‚Äêstat‚Äêfilter.principal‚Äêsession‚Äêname=admin, spring.datasource.druid.pool-prepared-statements=true, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.max-wait=60000, spring.datasource.druid.stat‚Äêview‚Äêservlet.url‚Äêpattern=/druid/*}}, NacosPropertySource@822232612 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,122 [32mINFO[m [main][SpringApplication.java:675] ‚Äê No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,819 [36mDEBUG[m [main][LogFactory.java:105] ‚Äê Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,825 [33mWARN[m [main][Logger.java:44] ‚Äê No MyBatis mapper was found in '[com.shanjupay.**.mapper]' package. Please check your configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,969 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,971 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,992 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:221] ‚Äê Searching for mappers annotated with @Mapper
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,993 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:225] ‚Äê Using auto-configuration base package 'com.shanjupay.merchant'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:44,996 [33mWARN[m [main][Logger.java:44] ‚Äê No MyBatis mapper was found in '[com.shanjupay.merchant]' package. Please check your configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,005 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,006 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,007 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,007 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,008 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,008 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,008 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,008 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,008 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,009 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,010 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,010 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,011 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,011 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,011 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,011 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,011 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,012 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,012 [32mINFO[m [main][DubboConfigBindingRegistrar.java:127] ‚Äê The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,012 [32mINFO[m [main][DubboConfigBindingRegistrar.java:151] ‚Äê The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,014 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,016 [36mDEBUG[m [main][DubboConfigBindingRegistrar.java:96] ‚Äê There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,228 [33mWARN[m [main][EndpointId.java:135] ‚Äê Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,279 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:204] ‚Äê  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,280 [32mINFO[m [main][ServiceAnnotationBeanPostProcessor.java:206] ‚Äê  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,284 [33mWARN[m [main][ServiceAnnotationBeanPostProcessor.java:169] ‚Äê  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,288 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,288 [32mINFO[m [main][ConfigurationClassPostProcessor.java:380] ‚Äê Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,507 [32mINFO[m [main][GenericScope.java:294] ‚Äê BeanFactory id=3b4ab0ac-7d7e-350f-ad56-4669c95b8986
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,557 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,680 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4b7818fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,861 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,874 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,878 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$cf396800] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,893 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,912 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,924 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,934 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,938 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,939 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$4179047a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,942 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$d4230cd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,948 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,951 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,955 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$9468468c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,959 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$88334f51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,968 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$1325e280] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,975 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,977 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,986 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:45,992 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,013 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,016 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$6096df5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,024 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,028 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,033 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,037 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,115 [33mWARN[m [main][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,117 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,167 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,194 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,203 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$98b9ab30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,225 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,234 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$d28fa730] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,246 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$a70b988d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,254 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$59585aa6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,262 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$146f4095] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,273 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,288 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,302 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$3b3ab7c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,324 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,336 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$8917361c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,353 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,362 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,390 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,419 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,436 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$65abe490] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,448 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,453 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,461 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,465 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,466 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,483 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,491 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,493 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,495 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,505 [32mINFO[m [main][PostProcessorRegistrationDelegate.java:330] ‚Äê Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$67921bf9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,815 [32mINFO[m [main][TomcatWebServer.java:90] ‚Äê Tomcat initialized with port(s): 56040 (http)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,830 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,837 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,838 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,846 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/hsk/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,940 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:46,940 [32mINFO[m [main][ServletWebServerApplicationContext.java:296] ‚Äê Root WebApplicationContext: initialization completed in 2799 ms
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:47,313 [32mINFO[m [main][DruidDataSourceAutoConfigure.java:56] ‚Äê Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:47,652 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10001,procId-1776} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:47,717 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10002,procId-1777} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:47,789 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10003,procId-1778} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:47,850 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10004,procId-1779} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:47,932 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005,procId-1780} connected
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:47,963 [32mINFO[m [main][DruidDataSource.java:1002] ‚Äê {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,690 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,693 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,697 [33mWARN[m [main][URLConfigurationSource.java:121] ‚Äê No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,697 [32mINFO[m [main][URLConfigurationSource.java:122] ‚Äê To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,728 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,730 [36mDEBUG[m [main][ResourceBundleMessageInterpolator.java:89] ‚Äê Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,736 [36mDEBUG[m [main][TraversableResolvers.java:60] ‚Äê Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,739 [36mDEBUG[m [main][ConfigurationImpl.java:148] ‚Äê Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,740 [36mDEBUG[m [main][ConfigurationImpl.java:180] ‚Äê Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,740 [36mDEBUG[m [main][ConfigurationImpl.java:194] ‚Äê Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,742 [36mDEBUG[m [main][ValidationXmlParser.java:120] ‚Äê Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,743 [36mDEBUG[m [main][ResourceLoaderHelper.java:53] ‚Äê Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,744 [36mDEBUG[m [main][ResourceLoaderHelper.java:60] ‚Äê Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,744 [36mDEBUG[m [main][ResourceLoaderHelper.java:66] ‚Äê Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,745 [36mDEBUG[m [main][ValidationXmlParser.java:127] ‚Äê No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,750 [36mDEBUG[m [main][ValidatorFactoryImpl.java:578] ‚Äê HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,751 [36mDEBUG[m [main][ValidatorFactoryImpl.java:579] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,752 [36mDEBUG[m [main][ValidatorFactoryImpl.java:580] ‚Äê HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,752 [36mDEBUG[m [main][ValidatorFactoryImpl.java:581] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,752 [36mDEBUG[m [main][ValidatorFactoryImpl.java:582] ‚Äê HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:48,861 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,143 [32mINFO[m [main][ExecutorConfigurationSupport.java:171] ‚Äê Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,161 [36mDEBUG[m [main][MybatisPlusAutoConfiguration.java:263] ‚Äê No org.mybatis.spring.mapper.MapperFactoryBean found.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,207 [36mDEBUG[m [main][GlobalConfigUtils.java:106] ‚Äê DeBug: MyBatis Plus Global configuration Initializing !
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,213 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectList
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,214 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectObjs
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,214 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Insert
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,215 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Update
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,215 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Delete
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,216 [36mDEBUG[m [main][MybatisConfiguration.java:85] ‚Äê addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Count
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,240 [36mDEBUG[m [main][VFS.java:77] ‚Äê Using VFS adapter com.baomidou.mybatisplus.autoconfigure.SpringBootVFS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,254 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,258 [36mDEBUG[m [main][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,276 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,283 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,299 [32mINFO[m [main][DubboConfigBindingBeanPostProcessor.java:109] ‚Äê The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,894 [32mINFO[m [main][EndpointLinksResolver.java:59] ‚Äê Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:49,964 [32mINFO[m [main][DubboServiceMetadataRepository.java:280] ‚Äê The metadata of Dubbo service[name : merchant-application] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,030 [33mWARN[m [main][DubboServiceMetadataRepository.java:484] ‚Äê The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,030 [32mINFO[m [main][DubboServiceMetadataRepository.java:262] ‚Äê The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,097 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,112 [32mINFO[m [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] ‚Äê The event of the service instances[name : merchant-application , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,122 [32mINFO[m [main][DirectJDKLog.java:173] ‚Äê Starting ProtocolHandler ["http-nio-56040"]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,170 [32mINFO[m [main][TomcatWebServer.java:204] ‚Äê Tomcat started on port(s): 56040 (http) with context path ''
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,219 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,287 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,325 [33mWARN[m [main][AbstractInterfaceConfig.java:265] ‚Äê  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,401 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,419 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,433 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,440 [32mINFO[m [main][ServiceConfig.java:643] ‚Äê  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10296&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016870331&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,440 [32mINFO[m [main][ServiceConfig.java:581] ‚Äê  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10296&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016870331&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,441 [32mINFO[m [main][AbstractInterfaceConfig.java:237] ‚Äê  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,442 [32mINFO[m [main][ServiceConfig.java:595] ‚Äê  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10296&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016870331&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=10296&qos.enable=false&qos.port=22310&registry=nacos&release=2.7.3&timestamp=1678016870327, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,450 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,461 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,466 [32mINFO[m [main][QosProtocolWrapper.java:89] ‚Äê  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,478 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,493 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,501 [36mDEBUG[m [main][AdaptiveClassCodeGenerator.java:104] ‚Äê  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,514 [36mDEBUG[m [main][InternalLoggerFactory.java:43] ‚Äê Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,520 [36mDEBUG[m [main][MultithreadEventLoopGroup.java:44] ‚Äê -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,541 [36mDEBUG[m [main][NioEventLoop.java:105] ‚Äê -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,542 [36mDEBUG[m [main][NioEventLoop.java:106] ‚Äê -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,546 [36mDEBUG[m [main][PlatformDependent.java:966] ‚Äê Platform: MacOS
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,548 [36mDEBUG[m [main][PlatformDependent0.java:395] ‚Äê -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,548 [36mDEBUG[m [main][PlatformDependent0.java:871] ‚Äê Java version: 8
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,550 [36mDEBUG[m [main][PlatformDependent0.java:120] ‚Äê sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,552 [36mDEBUG[m [main][PlatformDependent0.java:144] ‚Äê sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,553 [36mDEBUG[m [main][PlatformDependent0.java:182] ‚Äê java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,555 [36mDEBUG[m [main][PlatformDependent0.java:243] ‚Äê direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,558 [36mDEBUG[m [main][PlatformDependent0.java:313] ‚Äê java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,559 [36mDEBUG[m [main][PlatformDependent0.java:378] ‚Äê jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,560 [36mDEBUG[m [main][PlatformDependent0.java:385] ‚Äê java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,560 [36mDEBUG[m [main][PlatformDependent.java:992] ‚Äê sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,561 [36mDEBUG[m [main][PlatformDependent.java:1086] ‚Äê -Dio.netty.tmpdir: /var/folders/s5/f4r047851kd1np0tsvnsgyx00000gn/T (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,561 [36mDEBUG[m [main][PlatformDependent.java:1165] ‚Äê -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,562 [36mDEBUG[m [main][PlatformDependent.java:157] ‚Äê -Dio.netty.maxDirectMemory: 1908932608 bytes
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,563 [36mDEBUG[m [main][PlatformDependent.java:164] ‚Äê -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,565 [36mDEBUG[m [main][CleanerJava6.java:92] ‚Äê java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,565 [36mDEBUG[m [main][PlatformDependent.java:184] ‚Äê -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,567 [36mDEBUG[m [main][PlatformDependent.java:860] ‚Äê org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,585 [36mDEBUG[m [main][ResourceLeakDetector.java:129] ‚Äê -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,585 [36mDEBUG[m [main][ResourceLeakDetector.java:130] ‚Äê -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,591 [36mDEBUG[m [main][PooledByteBufAllocator.java:126] ‚Äê -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,591 [36mDEBUG[m [main][PooledByteBufAllocator.java:127] ‚Äê -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,591 [36mDEBUG[m [main][PooledByteBufAllocator.java:129] ‚Äê -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,592 [36mDEBUG[m [main][PooledByteBufAllocator.java:134] ‚Äê -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,592 [36mDEBUG[m [main][PooledByteBufAllocator.java:138] ‚Äê -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,592 [36mDEBUG[m [main][PooledByteBufAllocator.java:139] ‚Äê -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,592 [36mDEBUG[m [main][PooledByteBufAllocator.java:140] ‚Äê -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,593 [36mDEBUG[m [main][PooledByteBufAllocator.java:141] ‚Äê -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,593 [36mDEBUG[m [main][PooledByteBufAllocator.java:142] ‚Äê -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,593 [36mDEBUG[m [main][PooledByteBufAllocator.java:143] ‚Äê -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,593 [36mDEBUG[m [main][PooledByteBufAllocator.java:144] ‚Äê -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,593 [36mDEBUG[m [main][PooledByteBufAllocator.java:145] ‚Äê -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,597 [36mDEBUG[m [main][InternalThreadLocalMap.java:54] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,598 [36mDEBUG[m [main][InternalThreadLocalMap.java:57] ‚Äê -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,609 [36mDEBUG[m [main][DefaultChannelId.java:79] ‚Äê -Dio.netty.processId: 10296 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,612 [36mDEBUG[m [main][NetUtil.java:139] ‚Äê -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,615 [36mDEBUG[m [main][NetUtil.java:140] ‚Äê -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,618 [36mDEBUG[m [main][NetUtil.java:224] ‚Äê Loopback interface: [lo0, lo0, 0:0:0:0:0:0:0:1%lo0] ([lo0, lo0, 0:0:0:0:0:0:0:1%lo0], {})
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,619 [36mDEBUG[m [main][NetUtil.java:289] ‚Äê Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,623 [36mDEBUG[m [main][DefaultChannelId.java:101] ‚Äê -Dio.netty.machineId: 3c:a6:f6:ff:fe:27:42:1c (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,638 [36mDEBUG[m [main][ByteBufUtil.java:83] ‚Äê -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,639 [36mDEBUG[m [main][ByteBufUtil.java:92] ‚Äê -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,639 [36mDEBUG[m [main][ByteBufUtil.java:95] ‚Äê -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,653 [32mINFO[m [main][AbstractServer.java:73] ‚Äê  [DUBBO] Start NettyServer bind /0.0.0.0:20891, export /192.168.199.177:20891, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,665 [32mINFO[m [main][AbstractRegistry.java:212] ‚Äê  [DUBBO] Load registry cache file /Users/hsk/.dubbo/dubbo-registry-merchant-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5910&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678010226322&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,674 [32mINFO[m [main][AbstractRegistry.java:280] ‚Äê  [DUBBO] Register: dubbo://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10296&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016870331&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,775 [32mINFO[m [main][AbstractRegistry.java:305] ‚Äê  [DUBBO] Subscribe: provider://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10296&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016870331&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,832 [33mWARN[m [main][AbstractRegistry.java:395] ‚Äê  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10296&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016870331&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,834 [33mWARN[m [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] ‚Äê  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.199.177:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.199.177&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10296&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1678016870331&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.199.177
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,835 [32mINFO[m [main][DubboMetadataServiceExporter.java:86] ‚Äê The Dubbo service[<dubbo:service exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@586737ff" group="merchant-service" deprecated="false" register="true" dynamic="true" version="1.0.0" valid="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" />] has been exported.
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,886 [32mINFO[m [main][NacosServiceRegistry.java:62] ‚Äê nacos registry, merchant-service 192.168.199.177:56040 register finished
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:50,895 [32mINFO[m [main][StartupInfoLogger.java:59] ‚Äê Started MerchantBootstrap in 8.142 seconds (JVM running for 9.322)
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,367 [32mINFO[m [RMI TCP Connection(5)-192.168.199.177][DirectJDKLog.java:173] ‚Äê Initializing Spring DispatcherServlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,370 [32mINFO[m [RMI TCP Connection(5)-192.168.199.177][FrameworkServlet.java:524] ‚Äê Initializing Servlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,420 [32mINFO[m [RMI TCP Connection(5)-192.168.199.177][FrameworkServlet.java:546] ‚Äê Completed initialization in 49 ms
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,428 [36mDEBUG[m [RMI TCP Connection(4)-192.168.199.177][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,454 [36mDEBUG[m [RMI TCP Connection(4)-192.168.199.177][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,470 [36mDEBUG[m [RMI TCP Connection(4)-192.168.199.177][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,477 [36mDEBUG[m [RMI TCP Connection(4)-192.168.199.177][Log4j2Filter.java:137] ‚Äê {conn-10005, stmt-20000} created
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,903 [36mDEBUG[m [RMI TCP Connection(4)-192.168.199.177][Log4j2Filter.java:137] ‚Äê {conn-10005, stmt-20000, rs-50000} query executed. 410.737542 millis. /* ping */ SELECT 1
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,911 [36mDEBUG[m [RMI TCP Connection(4)-192.168.199.177][Log4j2Filter.java:142] ‚Äê {conn-10005, stmt-20000, rs-50000} open
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,914 [36mDEBUG[m [RMI TCP Connection(4)-192.168.199.177][Log4j2Filter.java:142] ‚Äê {conn-10005, stmt-20000, rs-50000} Header: [1]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,918 [36mDEBUG[m [RMI TCP Connection(4)-192.168.199.177][Log4j2Filter.java:142] ‚Äê {conn-10005, stmt-20000, rs-50000} Result: [1]
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,923 [36mDEBUG[m [RMI TCP Connection(4)-192.168.199.177][Log4j2Filter.java:142] ‚Äê {conn-10005, stmt-20000, rs-50000} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,924 [36mDEBUG[m [RMI TCP Connection(4)-192.168.199.177][Log4j2Filter.java:137] ‚Äê {conn-10005, stmt-20000} closed
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:47:51,933 [36mDEBUG[m [RMI TCP Connection(4)-192.168.199.177][Log4j2Filter.java:132] ‚Äê {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:48:20,187 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:48:50,242 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:49:20,291 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:49:50,359 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:49:51,335 [33mWARN[m [com.alibaba.nacos.client.naming.updater][HostReactor.java:110] ‚Äê out of date data received, old-t: 1678016981291, new-t: 0
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:50:20,423 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:50:50,477 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:51:20,586 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:51:50,645 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:52:20,692 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:52:50,765 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:53:20,838 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:53:50,918 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:54:20,972 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:54:51,032 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:55:21,088 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:55:51,146 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:56:21,224 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:56:51,250 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:57:21,279 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:57:51,319 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:58:21,384 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:58:51,442 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:59:21,477 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2023‚Äê03‚Äê05
            19:59:51,503 [33mWARN[m [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] ‚Äê Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
